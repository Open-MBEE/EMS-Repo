#%RAML 0.8
---
title: mms
version: 1.0
mediaType: application/json
baseUri: https://{server}/alfresco/service
protocols: [HTTPS]
documentation: 
  - title: Home
    content: |
      Welcome to the _Model Management System (MMS) API_ Documentation. The _MMS API_
      allows you to connect your application to our RESTful service for accessing
      systems engineering model information.

securitySchemes:
  - basic:
      type: Basic Authentication

schemas:
  - elements: !include elements.json
  - views:    !include elements.json
    
  - products: !include products.json
  - configurations: !include configurations.json
  - snapshots: !include snapshots.json
  - versions: !include versions.json
    
  - sites:        !include sites.json
  - workspaces:   !include sites.json
  
  # include post/ put and delete responses
  #- elementsResponse: !include postResponse.json
  #- viewsResponse: !include postResponse.json
resourceTypes:
  - readCollection:
      securedBy: [basic]
      is: [recursable, searchable]
      usage: Resources with read capabilities and standard responses
      description: Read operations for <<resourcePathName>>
      get:
          description: Read operation for <<resourcePathName>>
          responses:
              200:
                description: <<resourcePathName>> read successful
                body:
                  schema: <<resourcePathName>>
              400:
                description: Malformed request by client
              401:
                description: User does not have read permissions to <<resourcePathName>>
              404:
                description: <<resourcePathName>> not found
              500:
                description: Could not read <<resourcePathName>> due to internal server error
  - collection:
      type: readCollection
      usage: Resources with CRUD capabilities
      description: Create, Update, and Delete operations for <<resourcePathName>>
      post:
        description: Append operation for <<resourcePathName>>
        body:
          schema: <<resourcePathName>>
        responses:
          200:
            body:
              schema: <<resourcePathName>>PostResponse
            description: <<resourcePathName>> append successful
          202:
            description: <<resourcePathName>> append started, but not yet completed
          401:
            description: User does not have write permissions to <<resourcePathName>>
          404:
            description: <<resourcePathName>> not found
          409:
            description: <<resourcePathName>> conflict detected (e.g., intervening update occurred between when user accessed resource and when user saved resource)
          500:
            description: Could not append to <<resourcePathName>> due to internal server error            
      put:
        description: Create/update operation for <<resourcePathName>>
        body:
          schema: <<resourcePathName>>
        responses:
          200:
            description: <<resourcePathName>> update successful
            body:
              schema: <<resourcePathName>>PutResponse
          201:
            description: <<resourcePathName>> create successful
          202:
            description: <<resourcePathName>> create/update started, but not yet completed
          401:
            description: User does not have create/update permissions to <<resourcePathName>>
          404:
            description: <<resourcePathName>> not found
          409:
            description: <<resourcePathName>> conflict detected (e.g., intervening update occurred between when user accessed resource and when user updated resource)
          500:
            description: Could not append to <<resourcePathName>> due to internal server error            
      delete:
        description: Delete operation for <<resourcePathName>>
        responses:
          200:
            description: <<resourcePathName>> delete successful
            body:
              schema:  <<resourcePathName>>DeleteResponse
          202:
            description: <<resourcePathName>> delete started, but not yet completed
          401:
            description: User does not have delete permissions to <<resourcePathName>>
          404:
            description: <<resourcePathName>> not found
          500:
            description: Could not delete <<resourcePathName>> due to internal server error
traits:
  - recursable:
      description: Aspect for resources that can be retrieved recursively
      queryParameters:
        recurse:
          description: If true, will find all <<resourcePathName>> recursively (in containment hierarchy)
          type: boolean
        recurseDepth:
          description: Depth to restrict recursion, defaults to 0, which is equivalently infinite depth
          type: integer
  - searchable:
      description: Aspect for resources that can be searched for any resource type
      queryParameters:
        search:
          description: Regular expression of the search to be executed at the specified scope   
/sites:
  type: readCollection
  get:
    description: Retrieve all sites for which user has read permissions
    responses:
      200:
        body:
          example: |
            # TODO: change to mimic other formats, e.g., {"sites": [...]}
            [
              {
                "name": "europa",
                "title": "Europa",
                "categories": [ "v1", "v2", "v3"]
              } ,
              {
                "name": "ems-support",
                "title": "EMS Support Site",
                "categories": []
              }
            ]
  /{siteId}:
    /projects:
      get:
        description: Retrieve all projects for which user has read permissions
        responses:
          200:
            body:
              example: |
                # taken from project.post.desc.xml (not currently implemented)
                { 
                  "projects": 
                  [
                    {
                      "id": "PROJECT-123456",
                      "name": "Europa",
                      "projectVersion": "v1"
                    },
                    {
                      "id": "PROJECT-2468",
                      "name": "Europa FS",
                      "projectVersion": "v35"
                    }
                  ]
                }
      /{projectId}:
        get:
          description: Retrieve the specific project
          responses:
            200:
              body:
                example: |
                  {
        /products:
          type: collection
          get:
            description: Retrieve all products for which user has read permissions
            responses:
              200:
                body:
                  example: |
                    # taken from configuration.get.desc.xml
                    {
                      "products": [
                        {
                          "id": "_17_0_2_3_8af0285_1397502950809_504517_66083",
                          "name": "Flight System",
                          "snapshots": [
                              {
                              "created": "2014-04-21T17:00:16.645-07:00",
                              "creator": "gdubos",
                              "id": "_17_0_2_3_8af0285_1397502950809_504517_66083_1398124815059",
                              "tag": "",
                              "url": "/alfresco/service/snapshots/_17_0_2_3_8af0285_1397502950809_504517_66083_1398124815059"
                            }
                          ]
                        }
                      ]
                    }
          /{productId}:
            type: collection
            /views:
              type: collection
              /{viewId}:
                type: collection
                /elements:
                  type: collection
                  /{elementId}:
                    type: collection
                    /comments:
                      type: collection
                      /{commentId}:
                        type: collection
                    /versions:
                      type: collection
                      /{versionId}:
                        type: collection
                /comments:
                  type: collection
                  /{commentId}:
                    type: collection
                /versions:
                  type: collection
                  /{versionId}:
                    type: collection
            /comments:
              type: collection
              /{commentId}:
                type: collection
            /versions:
              type: collection
              /{versionId}:
                type: collection
    /configurations:
      type: collection
    /snapshots:
      type: collection
    /changesets:
      type: collection
    /artifacts:
    /search:
      type: collection
      description: Search is available at every collection level for scoping purposes
/workspaces:
  type: readCollection
  description: This is a parallel of the sites branch and used for namespacing purposes, all the methods respond
  /{workspaceId}: