<?xml-stylesheet type="text/xsl" href="..\xsl\assertions.xsl"?>

<!-- 
  Simple SOAP Binding (Profile 1.0) Test Assertion Document (TAD) with Basic Profile 1.1 Test Assertion Document (TAD)

	Copyright (c) 2004 by The Web Services-Interoperability Organization (WS-I) and 
	Certain of its Members. All Rights Reserved.
	
	Notice
	The material contained herein is not a license, either expressly or impliedly, to any 
	intellectual property owned or controlled by any of the authors or developers of this 
	material or WS-I. The material contained herein is provided on an "AS IS" basis and to 
	the maximum extent permitted by applicable law, this material is provided AS IS AND WITH 
	ALL FAULTS, and the authors and developers of this material and WS-I hereby disclaim all 
	other warranties and conditions, either express, implied or statutory, including, but not 
	limited to, any (if any) implied warranties, duties or conditions of  merchantability, 
	of fitness for a particular purpose, of accuracy or completeness of responses, of results, 
	of workmanlike effort, of lack of viruses, and of lack of negligence. ALSO, THERE IS NO 
	WARRANTY OR CONDITION OF TITLE, QUIET ENJOYMENT, QUIET POSSESSION, CORRESPONDENCE TO 
	DESCRIPTION OR NON-INFRINGEMENT WITH REGARD TO THIS MATERIAL.
	
	IN NO EVENT WILL ANY AUTHOR OR DEVELOPER OF THIS MATERIAL OR WS-I BE LIABLE TO ANY OTHER 
	PARTY FOR THE COST OF PROCURING SUBSTITUTE GOODS OR SERVICES, LOST PROFITS, LOSS OF USE, 
	LOSS OF DATA, OR ANY INCIDENTAL, CONSEQUENTIAL, DIRECT, INDIRECT, OR SPECIAL DAMAGES 
	WHETHER UNDER CONTRACT, TORT, WARRANTY, OR OTHERWISE, ARISING IN ANY WAY OUT OF THIS OR 
	ANY OTHER AGREEMENT RELATING TO THIS MATERIAL, WHETHER OR NOT SUCH PARTY HAD ADVANCE 
	NOTICE OF THE POSSIBILITY OF SUCH DAMAGES.
	
	WS-I License Information
	Use of this WS-I Material is governed by the WS-I Test License and other licenses.  Information on these 
	licenses are contained in the README.txt and ReleaseNotes.txt files.  By downloading this file, you agree 
	to the terms of these licenses.
	
	How To Provide Feedback
	The Web Services-Interoperability Organization (WS-I) would like to receive input, 
	suggestions and other feedback ("Feedback") on this work from a wide variety of 
	industry participants to improve its quality over time. 
	
	By sending email, or otherwise communicating with WS-I, you (on behalf of yourself if 
	you are an individual, and your company if you are providing Feedback on behalf of the 
	company) will be deemed to have granted to WS-I, the members of WS-I, and other parties 
	that have access to your Feedback, a non-exclusive, non-transferable, worldwide, perpetual, 
	irrevocable, royalty-free license to use, disclose, copy, license, modify, sublicense or 
	otherwise distribute and exploit in any manner whatsoever the Feedback you provide regarding 
	the work. You acknowledge that you have no expectation of confidentiality with respect to 
	any Feedback you provide. You represent and warrant that you have rights to provide this 
	Feedback, and if you are providing Feedback on behalf of a company, you represent and warrant 
	that you have the rights to provide Feedback on behalf of your company. You also acknowledge 
	that WS-I is not required to review, discuss, use, consider or in any way incorporate your 
	Feedback into future versions of its work. If WS-I does incorporate some or all of your 
	Feedback in a future version of the work, it may, but is not obligated to include your name 
	(or, if you are identified as acting on behalf of your company, the name of your company) on 
	a list of contributors to the work. If the foregoing is not acceptable to you and any company 
	on whose behalf you are acting, please do not provide any Feedback.
	
	WS-I members should direct feedback on this document to wsi_testing@lists.ws-i.org; 
        non-members should direct feedback to wsi-tools@ws-i.org.  

-->
<profileAssertions 
      name="Simple Soap Binding Profile [1.0] (with Basic Profile [1.1]) Test Assertions" 
      version="1.0.0.3" 
      date="2005-01-24"
      status="BdAD"
      xmlns="http://www.ws-i.org/testing/2004/07/assertions/">
<description>
        This document contains the test assertions for the WS-I Simple SOAP Binding Profile 1.0 
        combined with the test assertions for the WS-I Basic Profile definition. 
        These test assertions are used by the analyzer testing tool to determine if 
        a Web service is conformant to the Simple Soap Binding Profile 1.0 in conjunction with the Basic Profile 1.1.
    </description>
<!--
         primary TAD file is: ../common/profiles/SimpleSoapTestAssertions.xml   version=1.0.0.2   
         include TAD file is: ../common/profiles/BasicProfile_1.1_TAD.xml   version=1.1.0.10-->
<profileList>
<profile id="BP11" name="Basic Profile" version="1.1" revision="Final" location="http://ws-i.org/Profiles/BasicProfile-1.1-2004-08-24.html"/>
<profile id="SSBP1" name="Simple SOAP Binding Profile" version="1.0" revision="Final" location="http://ws-i.org/Profiles/SimpleSoapBindingProfile-1.0-2004-08-24.html"/>
</profileList>
	<editors>
	    <person affiliation="Oracle Corporation" href="simeon.m.greene@oracle.com">Simeon Greene</person>
	    <person affiliation="IBM Corporation" href="lauzond@ca.ibm.com">David Lauzon</person>
	    <person affiliation="Microsoft Corporation" href="kstobie@microsoft.com">Keith Stobie</person>
	    <person affiliation="Microsoft Corporation" href="edjohns@microsoft.com">Ed Johns</person>
	    <person affiliation="Optimyz Software, Inc." href="shrikant@optimyz.com">Shrikant Wagh</person>
	</editors>
	<contributorText>
	 Ajay Honnur (BEA),
	 Rami Jaamour (Parasoft),
	 Narendra Patil (Optimyz Software, Inc.)
	</contributorText>
<artifact type="discovery">
<specificationReferenceList>
<specification name="The UDDI Version 2.04 API Published Specification, Dated 19 July 2002" location="http://www.uddi.org/pubs/ProgrammersAPI-V2.04-Published-20020719.pdf"/>
<specification name="UDDI Version 2.03 Data Structure Reference, Published Specification, Dated 19 July 2002" location="http://www.uddi.org/pubs/DataStructure-V2.03-Published-20020719.pdf"/>
<specification name="Version 2.0 UDDI XML Schema 2001" location="http://www.uddi.org/schema/uddi_v2.xsd"/>
<specification name="V1.08 of the UDDI Best Practice for Using WSDL in a UDDI Registry" location="http://www.oasis-open.org/committees/uddi-spec/doc/bp/uddi-spec-tc-bp-using-wsdl-v108-20021110.htm"/>
</specificationReferenceList>
<description>
      The Basic Profile requires support for UDDI V2.0.
    </description>
<testAssertion id="BP3001" entryType="tModel" type="required" enabled="true">
			<context>For a candidate uddi:tModel</context>
			<assertionDescription>The uddi:tModel element uses WSDL as the description language and 
the uddi:tModel contains a reference to a WSDL binding.   
The uddi:overviewDoc/uddi:overviewURL element contains a reference to a WSDL definition, 
which uses a namespace of http://schemas.xmlsoap.org/wsdl/. The uddi:overviewURL may 
use the fragment notation to resolve to a specific wsdl:binding.</assertionDescription>
			<failureMessage>The uddi:tModel does not reference a WSDL based Web service 
definition or the uddi:tModel does not reference a wsdl:binding.</failureMessage>
			<failureDetailDescription>{tModel key}{uddi:overviewDoc}</failureDetailDescription>
			<additionalEntryTypeList>
				<wsdlInput>definitions</wsdlInput>				
			</additionalEntryTypeList>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11" role="target">R3002</reference>
				<reference profileID="BP11" role="target">R3010</reference>
				<reference profileID="BP11" role="target">R3011</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP3002" entryType="bindingTemplate" type="required" enabled="true">
			<context>For a candidate uddi:bindingTemplate</context>
			<assertionDescription>The uddi:bindingTemplate element contains a uddi:accessPoint element, with a non-empty value.</assertionDescription>
			<failureMessage>The uddi:bindingTemplate does not contain an uddi:accessPoint element, or it is empty.</failureMessage>
			<failureDetailDescription>bindingTemplate key</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R3100</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP3003" entryType="tModel" type="required" enabled="true">
			<context>For a candidate uddi:tModel</context>
			<assertionDescription>The uddi:tModel is categorized using the uddi:types taxonomy, as "wsdlSpec": the uddi:keyedReference element has a tModelKey attribute value equal to "uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4" and a keyValue attribute value equal to "wsdlSpec".
			</assertionDescription>
			<failureMessage>The uddi:tModel is not categorized using the uddi:types taxonomy with a categorization of "wsdlSpec".</failureMessage>
			<failureDetailDescription>{tModel key}{categoryBag}</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R3003</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP5998" entryType="tModel" type="driverTestable" enabled="false">
      <context>Driver testable.</context>
      <assertionDescription>Driver testable.</assertionDescription>
      <detailDescription>Driver testable.</detailDescription>
      <additionalEntryTypeList/>
      <prereqList/>
      <referenceList>
      </referenceList>
      <comments>All of these profile requirements are testable only by using a driver test program, since a test assertion would
require application-level knowledge of the message exchange.</comments>
    </testAssertion>
</artifact>
<artifact type="description">
<specificationReferenceList>
<specification name="Web Services Description Language (WSDL) 1.1" location="http://www.w3.org/TR/wsdl.html"/>
<specification name="XML Schema Part 1: Structures" location="http://www.w3.org/TR/xmlschema-1"/>
<specification name="XML Schema Part 2: Datatypes" location="http://www.w3.org/TR/xmlschema-2"/>
</specificationReferenceList>
<description>
      The Basic Profile requires support for XML Schema 1.0 and WSDL 1.1.
    The Simple SOAP Binding Profile requires support for XML Schema 1.0 and WSDL 1.1.</description>
<testAssertion id="BP2201" entryType="definitions" type="required" enabled="true">
			<context>For a candidate Web service definition within a WSDL document with a XML declaration statement.</context>
			<assertionDescription>The XML declaration statement uses UTF-8 or UTF-16 for the encoding.</assertionDescription>
			<failureMessage>XML declaration statement within WSDL document does not use expected encoding (UTF-8 or UTF-16).</failureMessage>
			<failureDetailDescription>XML declaration statement.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R4003</reference>
			</referenceList>
			<comments>checks WSDL encoding.</comments>
		</testAssertion>
<testAssertion id="BP2202" entryType="types" type="required" enabled="true">
			<context>For a candidate wsdl:types element within a WSDL document which imports an XML schema directly or indirectly.</context>
			<assertionDescription>The imported schema uses UTF-8 or UTF-16 for the encoding.</assertionDescription>
			<failureMessage>The XML declaration statement within the imported XML Schema does not 
use expected encoding (UTF-8 or UTF-16).</failureMessage>
			<failureDetailDescription>XML declaration statement.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2010</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2700" entryType="definitions" type="required" enabled="true">
			<context>For a candidate wsdl:definitions element within a WSDL document.</context>
			<assertionDescription>The wsdl:definitions is a well-formed XML 1.0 document.</assertionDescription>
			<failureMessage>The wsdl:definitions is not a well-formed XML 1.0 document.</failureMessage>
			<failureDetailDescription>Error message from the XML parser</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R4004</reference>
				<reference profileID="BP11" role="collateral">R0001</reference>
			</referenceList>
			<comments>1st step in a 3-phase verification process: XML+namespace+schemavalid.</comments>
		</testAssertion>
<testAssertion id="BP2102" entryType="types" type="required" enabled="true">
			<context>For a candidate wsdl:types element, with XML schema import elements</context>
			<assertionDescription>Each XML schema import statement (xsd:import) is only used to directly reference an XML schema definition, which has "schema" from XML namespace "http://www.w3.org/2001/XMLSchema" as root element.  It does not contain a reference to another document embedding the XML schema definition (e.g. WSDL).</assertionDescription>
			<failureMessage>An XML schema import element references something other than an XML schema definition: the referenced element does not have "schema" from XML namespace "http://www.w3.org/2001/XMLSchema" as root element.</failureMessage>
			<failureDetailDescription>Defective XML schema import element.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2002</reference>
				<reference profileID="BP11">R2004</reference>
			</referenceList>
			<comments>NOTE: XML schema definitions within a WSDL document must adhere to the same rules as XML schema definitions which appear in separate XSD files.  For example, two WSDL definitions can not contain the same complex type definition for the same targetNamespace.</comments>
		</testAssertion>
<testAssertion id="BP2011" entryType="types" type="required" enabled="true">
			<context>For a candidate wsdl:types element within a WSDL document, which imports an XML schema directly or indirectly</context>
			<assertionDescription>The imported XML schema is a well-formed XML 1.0 document and if it contains an 
XML declaration, it is version 1.0.</assertionDescription>
			<failureMessage>The imported XML schema is not a well-formed XML 1.0 document.</failureMessage>
			<failureDetailDescription>{Error message from the XML parser}{imported XML schema}</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2102</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2011</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2701" entryType="definitions" type="required" enabled="true">
			<context>For a candidate wsdl:definitions element within a WSDL document.</context>
			<assertionDescription>The wsdl:definitions namespace has value: http://schemas.xmlsoap.org/wsdl/.</assertionDescription>
			<failureMessage>The wsdl:definitions namespace is not: http://schemas.xmlsoap.org/wsdl/.</failureMessage>
			<detailDescription/>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R0001</reference>
			</referenceList>
			<comments>2nd step in a 3-phase verification process: XML+namespace+schemavalid.</comments>
		</testAssertion>
<testAssertion id="BP2703" entryType="definitions" type="required" enabled="true">
			<context>For a candidate description within a WSDL document</context>
			<assertionDescription>If it uses the WSDL namespace, then it conforms to the schema located at http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd, and if it uses the WSDL-SOAP binding namespace then it conforms to the schema located at http://schemas.xmlsoap.org/wsdl/soap/2003-02-11.xsd.</assertionDescription>
			<failureMessage>WSDL definition does not conform to the schema located at http://schemas.xmlsoap.org/wsdl/soap/2003-02-11.xsd for some element using the WSDL-SOAP binding namespace, or does not conform to the schema located at http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd for some element using the WSDL namespace.</failureMessage>
			<failureDetailDescription>Error message from the XML parser.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2029</reference>
				<reference profileID="BP11">R2028</reference>
				<reference profileID="BP11" role="collateral">R0001</reference>
			</referenceList>
			<comments>A description using WSDL-SOAP namespace is prefixed soapbind: in this doc as well as in the profile def. This verification is 3rd step in a 3-phase verification process: XML+namespace+schemavalid.</comments>
		</testAssertion>
<testAssertion id="BP2034" entryType="definitions" type="recommended" enabled="true">
			<context>For a candidate description within a WSDL document</context>
			<assertionDescription>The candidate description does not contain the namespace declaration xmlns:xml="http://www.w3.org/XML/1998/namespace".</assertionDescription>
			<failureMessage>The candidate description contains the namespace declaration xmlns:xml="http://www.w3.org/XML/1998/namespace".</failureMessage>
			<failureDetailDescription/>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2703</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1034</reference>
				<reference profileID="BP11">R4005</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2018" entryType="definitions" type="required" enabled="true">
			<context>For a candidate Web service definition with wsdl:types elements</context>
			<assertionDescription>The wsdl:types elements occur either as first children in the WSDL namespace of the wsdl:definitions element, or they are only preceded by wsdl:documentation element(s) and/or wsdl:import(s) element(s).</assertionDescription>
			<failureMessage>wsdl:types element(s) in the WSDL namespace of the wsdl:definitions element were preceded by child elements other than wsdl:documentation or wsdl:import elements.</failureMessage>
			<detailDescription/>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2703</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2023</reference>
				<reference profileID="BP11" role="collateral">R2030</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2208" entryType="operation" type="required" enabled="true">
			<context>For a candidate wsdl:operation in a wsdl:portType definition</context>
			<assertionDescription>The wsdl:operation element is either a WSDL request/response or a one-way operation (no Notification or Sollicit-Response).</assertionDescription>
			<failureMessage>wsdl:operation was not a request/response or one-way operation.</failureMessage>
			<failureDetailDescription>Operation.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2703</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2303</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2010" entryType="portType" type="required" enabled="true">
			<context>For a candidate wsdl:portType definition</context>
			<assertionDescription>name attributes of Operations are unique in the wsdl:portType definition</assertionDescription>
			<failureMessage>name attributes are not unique within the portType definition.</failureMessage>
			<failureDetailDescription>list of duplicate name(s) and of elements that use them.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2703</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2304</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2020" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element, if the style attribute of the contained soapbind:binding is "rpc" 
and the use attribute is "literal".</context>
			<assertionDescription>The namespace attribute is specified on all soapbind:body elements and the value of the 
namespace attribute is an absolute URI. </assertionDescription>
			<failureMessage>A soapbind:body element does not have a namespace attribute, or the namespace attribute 
value is not an absolute URI.</failureMessage>
			<failureDetailDescription>soapbind:body elements that failed the assertion</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2717</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2021" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element</context>
			<assertionDescription>The wsdl:input element and wsdl:output element of each operation uses the attribute name "part" with a Schema type of "NMTOKEN" and does not use "parts", for both soapbind:header elements and soapbind:headerfault elements. </assertionDescription>
			<failureMessage>The wsdl:input element or wsdl:output element of an operation does not use the attribute name "part" with a Schema type of "NMTOKEN" for soapbind:header elements or soapbind:headerfault elements, or it uses "parts". </failureMessage>
			<failureDetailDescription>wsdl:input element or wsdl:output element of the defective operation.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2703</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2720</reference>
				<reference profileID="BP11">R2749</reference>
			</referenceList>
			<comments>Generally BP2703 will fail as a pre-req first because this will not pass a specialized schema check.</comments>
		</testAssertion>
<testAssertion id="BP2402" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element</context>
			<assertionDescription>The wsdl:binding element has a soapbind:binding child element.</assertionDescription>
			<failureMessage>The wsdl:binding element does not use a soapbind:binding element as defined in section "3 SOAP Binding." of the WSDL 1.1 specification.</failureMessage>
			<failureDetailDescription>wsdl:binding.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2703</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2401</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2022" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element</context>
			<assertionDescription>the name attribute is specified on the soapbind:fault element.</assertionDescription>
			<failureMessage>Defective soapbind:fault element: the name attribute is not specified on the soapbind:fault element.</failureMessage>
			<failureDetailDescription>Defective soapbind:fault element</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2721</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2032" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element</context>
			<assertionDescription>the name attribute that is specified on the soapbind:fault element matches the value specified on the parent element wsdl:fault.</assertionDescription>
			<failureMessage>Defective soapbind:fault element: the "name" attribute value does not match the value of the "name" attribute on the parent element wsdl:fault.</failureMessage>
			<failureDetailDescription>Defective soapbind:fault element</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2754</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2404" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element</context>
			<assertionDescription>The contained soap:binding element has a "transport" attribute, which has value: http://schemas.xmlsoap.org/soap/http.</assertionDescription>
			<failureMessage>Transport attribute of the soap:binding does not contain http://schemas.xmlsoap.org/soap/http.</failureMessage>
			<failureDetailDescription>soap:binding element.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2703</testAssertionID>
				<testAssertionID>BP2402</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2701</reference>
				<reference profileID="BP11">R2702</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2012" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element, if the style attribute of the binding is "document" and use is "literal" </context>
			<assertionDescription>The binding (in soapbind:body elements) only refers to part elements that have been defined using the "element" attribute.</assertionDescription>
			<failureMessage>The binding (in soapbind:body elements) refers to part(s) of a soap:body element that do not have  the "element" attribute.</failureMessage>
			<failureDetailDescription>soapbind:body element(s) that have non "element" parts attributes.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2404</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2204</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2406" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element, if the use attribute is specified on the soapbind:body, soapbind:fault, soapbind:header, or soapbind:headerfault elements.</context>
			<assertionDescription>The use attribute has a value of "literal".</assertionDescription>
			<failureMessage>The use attribute of a soapbind:body, soapbind:fault, soapbind:header and soapbind:headerfault does not have value of "literal".</failureMessage>
			<failureDetailDescription>Defective soapbind:body, soapbind:fault, soapbind:header, or soapbind:headerfault elements.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2703</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2706</reference>
				<reference profileID="BP11">R2723</reference>
				<reference profileID="BP11" role="collateral">R2707</reference>
			</referenceList>
			<comments>R2707 is not the verified Req, but an assumed Req for this verification.</comments>
		</testAssertion>
<testAssertion id="BP2019" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element, if the "style" attribute of the contained soap:binding is "document" and use attribute is "literal"</context>
			<assertionDescription>The "namespace" attribute is not specified in any contained soapbind:body, soapbind:header, soapbind::headerfault, soapbind:fault elements </assertionDescription>
			<failureMessage>The binding is of style "document" and use "literal", and the "namespace" attribute is specified in some soapbind:body, soapbind:header, soapbind::headerfault, soapbind:fault element</failureMessage>
			<failureDetailDescription>Contained element with namespace attribute.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2406</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2716</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2013" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element, if the "style" attribute of the contained soap:binding is "rpc" and use attribute is "literal" </context>
			<assertionDescription>The binding (in soapbind:body elements) only refers to part elements that have been defined using the "type" attribute</assertionDescription>
			<failureMessage>soap:binding (in soapbind:body elements) refers to part(s) that do not have  the "type" attribute.</failureMessage>
			<failureDetailDescription>{binding}{message with failed part}</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2203</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2014" entryType="operation" type="required" enabled="true">
			<context>For a candidate wsdl:operation with a parameterOrder attribute, if referred to by a candidate rpc-literal wsdl:binding element</context>
			<assertionDescription>The parameterOrder attribute omits at most 1 part from an output wsdl:message.</assertionDescription>
			<failureMessage>An operation associated with an rpc-literal binding has a parameterOrder attribute that omits more than 1 part.</failureMessage>
			<failureDetailDescription>{defective portType}{output wsdl:message}</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2305</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2017" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding</context>
			<assertionDescription>The "style" attribute of each operation in the contained soap:binding has the same value of "document" or "rpc", for all operations of the wsdl:binding.</assertionDescription>
			<failureMessage>The "style" attribute of an operation in soap:binding, does not have the same value of "document" or "rpc", as other operations of the binding.</failureMessage>
			<failureDetailDescription>defective soap:binding element.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2404</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2705</reference>
				<reference profileID="BP11" role="collateral">R2706</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2101" entryType="definitions" type="required" enabled="true">
			<context>For a candidate wsdl:definition, if it contains wsdl:import statements</context>
			<assertionDescription>Each wsdl:import statement is only used to import another WSDL description.</assertionDescription>
			<failureMessage>A wsdl:import element does not contain a reference to another WSDL description.</failureMessage>
			<failureDetailDescription>wsdl:import element(s) that does not reference a WSDL description.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2703</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2001</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2098" entryType="import" type="required" enabled="true">
			<context>For a candidate wsdl:import element</context>
			<assertionDescription>The "location" attribute is specified for the wsdl:import element, and has a non-empty value.</assertionDescription>
			<failureMessage>A wsdl:import element does not have a "location" attribute, or has an empty value for the location attribute.</failureMessage>
			<failureDetailDescription>Defective wsdl:import element.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2007</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2803" entryType="import" type="required" enabled="true">
			<context>For a candidate wsdl:import element</context>
			<assertionDescription>The "namespace" attribute's value is not a relative URI.</assertionDescription>
			<failureMessage>The wsdl:import element's "namespace" attribute value is a relative URI.</failureMessage>
			<failureDetailDescription>Defective wsdl:import element.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2703</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2803</reference>
			</referenceList>
			<comments/> 
			<additionalInfo status="done" ownerSignOff="David Lauzon" editorSignOff="" testCasesCompleted="no"/>
		</testAssertion>
<testAssertion id="BP2103" entryType="definitions" type="required" enabled="true">
			<context>For each a candidate wsdl:definitions</context>
			<assertionDescription>For the referenced definitions as well as all imported descriptions, The XML schema import statement is only used within an xsd:schema element.</assertionDescription>
			<failureMessage>A XML schema import element was found outside of an xsd:schema element.</failureMessage>
			<failureDetailDescription>Defective XML schema import element.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2003</reference>
			</referenceList>
			<comments>This assertion is processed once for each WSDL description which fulfills the context criteria. The target for this assertion is the definitions element, because the XML schema import element might be specified anywhere within a WSDL document.</comments>
		</testAssertion>
<testAssertion id="BP2104" entryType="definitions" type="required" enabled="true">
			<context>For a candidate wsdl:import</context>
			<assertionDescription>The targetNamespace attribute on the wsdl:definitions element for the imported WSDL description has the same value as the namespace attribute on the wsdl:import element that imported the WSDL description.</assertionDescription>
			<failureMessage>The targetNamespace attribute on the wsdl:definitions element for an imported WSDL description does not have the same value as the namespace attribute on the wsdl:import element that imported the WSDL description.</failureMessage>
			<failureDetailDescription>wsdl:import element.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2101</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2005</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2105" entryType="definitions" type="required" enabled="true">
			<context>For a candidate wsdl:definitions with wsdl:import elements</context>
			<assertionDescription>wsdl:import elements occur either as first children elements in the WSDL namespace of the wsdl:defintitions element, or they are only  preceded by wsdl:documentation elements.</assertionDescription>
			<failureMessage>A wsdl:import element in the WSDL namespace under the wsdl:definitions element, is preceded by child elements other than wsdl:documentation elements.</failureMessage>
			<failureDetailDescription>Display the WSDL import element(s) that failed the assertion.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2022</reference>
				<reference profileID="BP11" role="collateral">R2030</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2416" entryType="definitions" type="required" enabled="true">
			<context>For a candidate wsdl:definitions</context>
			<assertionDescription>Every QName in the WSDL document that is not referring to a schema component, is either using the target namespace of this WSDL or the target namespace of a directly imported WSDL component.</assertionDescription>
			<failureMessage>A QName reference that does not refer to a schema component, is using neither the target namespace of this WSDL nor the target namespace of a directly imported WSDL component.</failureMessage>
			<failureDetailDescription>Defective QName(s).</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2101</reference>
			</referenceList>
			<comments>This assertion is processed once for each WSDL description which fulfills the context criteria. Only direct WSDL imports are considered for QName resolution. Note that this test does not require resolving the qualified element itself in the imported namespace: only the namespace is verified. Some sub cases of R2101 related to schema target namespaces, are not handled here and are covered by another TA covering R2102 (BP2417). </comments>
		</testAssertion>
<testAssertion id="BP2417" entryType="definitions" type="required" enabled="true">
			<context>For a candidate wsdl:definitions</context>
			<assertionDescription>Every QName in the WSDL document and its imports, that is referring to a schema component, uses the namespace defined in the targetNamespace attribute on the xs:schema element, or a namespace defined in the namespace attribute on an xs:import element within the xs:schema element.</assertionDescription>
			<failureMessage>A QName reference that is referring to a schema component, uses a namespace not defined in the targetNamespace attribute on the xs:schema element, or in the namespace attribute on an xs:import element within the xs:schema element.</failureMessage>
			<failureDetailDescription>Defective QName(s).</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2102</reference>
				<reference profileID="BP11">R2101</reference>
			</referenceList>
			<comments>This assertion is processed once for each WSDL description which fulfills the context criteria. Only the subcases of R2101 that are related to schema imports are covered by this test, as these overlap with R2102 requirements.</comments>
		</testAssertion>
<testAssertion id="BP2107" entryType="types" type="required" enabled="true">
			<context>For a candidate wsdl:types element containing an xsd:schema element</context>
			<assertionDescription>The xsd:schema element contains a targetNamespace attribute with a valid and non-null value unless the xsd:schema element has xsd:import and/or xsd:annotation as its only child element(s).</assertionDescription>
			<failureMessage>A xsd:schema element contained in a wsdl:types element does not have a targetNamespace attribute with a valid and non-null value, while having child element(s) other than xsd:import or xsd:annotation.</failureMessage>
			<failureDetailDescription>Defective xsd:schema element(s).</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2105</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2108" entryType="types" type="required" enabled="true">
			<context>For a candidate wsdl:types</context>
			<assertionDescription>The type soapenc:Array does not appear in these declarations, and the wsdl:arrayType attribute is not used in the type declaration.</assertionDescription>
			<failureMessage>An Array declaration uses - restricts or extends - the soapenc:Array type, or the wsdl:arrayType attribute is used in the type declaration.</failureMessage>
			<failureDetailDescription>Defective declaration(s).</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2110</reference>
				<reference profileID="BP11">R2111</reference>
			</referenceList>
			<comments>R2110 and R2111 have been interpreted as applying to any declaration, as we cannot assume the intent of declaring arrays, which is untestable.</comments>
		</testAssertion>
<testAssertion id="BP2110" entryType="types" type="recommended" enabled="true">
			<context>For a candidate wsdl:types that is used by an rpc-literal binding </context>
			<assertionDescription>The declaration does not use the naming convention ArrayOfXXX.</assertionDescription>
			<failureMessage>A declaration is using the convention ArrayOfXXX.</failureMessage>
			<failureDetailDescription>Defective declaration(s).</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2112</reference>
			</referenceList>
			<comments>R2112 has been interpreted as applying to any declaration, as we cannot assume the intent of declaring arrays, which is untestable. However, R2112 should only concern "wrapper elements", i.e. RPC-lit cases. The narrowing of the context here, is not sufficient to restrict properly the application of this TA.</comments>
		</testAssertion>
<testAssertion id="BP2111" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding, which contains a document-literal soap:binding</context>
			<assertionDescription>If the "parts" attribute is present, then the soapbind:body element(s) have at most one part listed in the parts attribute.</assertionDescription>
			<failureMessage>One or more soapbind:body element(s) in a document-literal soap:binding does not have at most one part listed in the parts attribute.</failureMessage>
			<failureDetailDescription>Defective soapbind:body element(s).</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2201</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2112" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding, with a style "rpc" attribute and containing at least a soapbind:body element</context>
			<assertionDescription>No wsdl:part referred by such a soapbind:body element is defined using the "element" attribute.</assertionDescription>
			<failureMessage>The referred wsdl:part element uses the "element" attribute in an rpc-literal soapbind:body.</failureMessage>
			<failureDetailDescription>{soapbind:body}{wsdl:part element(s)}</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2207</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2113" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element</context>
			<assertionDescription>When they contain references to message parts, the soapbind:header, soapbind:headerfault and soapbind:fault elements only refer to wsdl:part element(s) that have been defined using the "element" attribute.</assertionDescription>
			<failureMessage>The soapbind:header, soapbind:headerfault or soapbind:fault elements refer to wsd:part element(s) that are not defined using only the "element" attribute.</failureMessage>
			<failureDetailDescription>Defective wsdl:binding and wsdl:part elements.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2205</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2115" entryType="message" type="required" enabled="true">
			<context>For a candidate wsdl:message</context>
			<assertionDescription>An "element" attribute on any wsdl:part element refers to a global element declaration.</assertionDescription>
			<failureMessage>A wsdl:message element containing a wsdl:part element that uses the "element" attribute does not refer, via that attribute, to a global element declaration.</failureMessage>
			<failureDetailDescription>Defective wsdl:message element.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2206</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2116" entryType="message" type="required" enabled="true">
			<context>For a candidate wsdl:message element</context>
			<assertionDescription>The wsdl:message element does not contain part elements that use both "type" and "element" attributes.</assertionDescription>
			<failureMessage>A wsdl:message element has at least one wsdl:part element that contains both type and element attributes.</failureMessage>
			<failureDetailDescription>Defective wsdl:message element.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2306</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2117" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element, referred to by an rpc-literal soap:binding</context>
			<assertionDescription>The rpc-literal binding does not have a namespace attribute specified on a contained soapbind:header, soapbind:headerfault, and soapbind:fault element.</assertionDescription>
			<failureMessage>An rpc-literal binding has the namespace attribute specified on contained soapbind:header, soapbind:headerfault and soapbind:fault elements.</failureMessage>
			<failureDetailDescription>{Defective wsdl:binding}{defective soapbind:header, soapbind:headerfault, or soapbind:fault element}</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2017</testAssertionID>
				<testAssertionID>BP2406</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2726</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2118" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element</context>
			<assertionDescription>The list (or set) of wsdl:operation elements for the contained wsdl:binding is the same as the list of wsdl:operations for the referred wsdl:portType.</assertionDescription>
			<failureMessage>A wsdl:binding does not have the same list of wsdl:operations as the wsdl:portType to which it refers.</failureMessage>
			<failureDetailDescription>{unmatching wsdl:binding element}{unmatching portType element}</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2718</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2114" entryType="binding" type="recommended" enabled="true">
			<context>For a candidate wsdl:binding element</context>
			<assertionDescription>Every wsdl:part from each wsdl:message in the associated wsdl:portType is referenced either by the soapbind:body, soapbind:header, soapbind:fault, or soapbind:headerfault.</assertionDescription>
			<failureMessage>A wsdl:binding does not bind every wsdl:part of a wsdl:message in the wsdl:portType to which it refers to one of soapbind:body, soapbind:header, soapbind:fault or soapbind:headerfault.</failureMessage>
			<failureDetailDescription>{Defective wsdl:binding element}{message with part(s) unbound}</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2118</testAssertionID>
			</prereqList>
			<referenceList>
                <reference profileID="BP11">R2209</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2119" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding, which is of type document-literal</context>
			<assertionDescription>If it does not specify the parts attribute on a soapbind:body element, the corresponding abstract wsdl:message defines zero or one wsdl:part.</assertionDescription>
			<failureMessage>A document-literal binding which does not specify the parts attribute, has more than one wsdl:part in the associated wsdl:message element.</failureMessage>
			<failureDetailDescription>Defective wsdl:binding element.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2404</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2210</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2120" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding</context>
			<assertionDescription>Each operation referenced by the binding results in a unique wire signature.</assertionDescription>
			<failureMessage>A binding has operations that are not unique.</failureMessage>
			<failureDetailDescription>Defective wsdl:operation element(s).</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2710</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP2122" entryType="types" type="required" enabled="true">
			<context>For a candidate wsdl:types element</context>
			<assertionDescription>The data type definition if any within the wsdl:types element is an XML schema definition defined in the XML Schema 1.0 Recommendation with the namespace URI "http://www.w3.org/2001/XMLSchema".</assertionDescription>
			<failureMessage>A wsdl:types element contained a data type definition that is not an XML schema definition.</failureMessage>
			<failureDetailDescription>Defective data type definition.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2801</reference>
			</referenceList>
			<comments>
        Validating the data type definitions includes any imported XML schema definitions.
      </comments>
		</testAssertion>
<testAssertion id="BP2123" entryType="definitions" type="recommended" enabled="true">
			<context>For a candidate wsdl:definitions, if it contains a wsdl:port, wsdl:binding, wsdl:portType, wsdl:operation, 
or wsdl:message that claims conformance to the Profile.</context>
			<assertionDescription>Contained WSDL extension elements do not use the wsdl:required attribute value of "true".</assertionDescription>
			<failureMessage>An extension element within a WSDL element that claims conformance to the Basic Profile has a wsdl:required attribute with a value of "true".</failureMessage>
			<failureDetailDescription>Display the extension element that failed the assertion.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2026</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP4200" entryType="definitions" type="informational" enabled="true">
        	<context>For a candidate wsdl:definitions element containing an extension element or attribute from a namespace other than "http://schemas.xmlsoap.org/wsdl/soap/".</context>
            <assertionDescription>The WSDL contains an extension element or attribute that does not belong to the "http://schemas.xmlsoap.org/wsdl/soap/".</assertionDescription>
            <failureMessage>The use of a WSDL extension element or attribute from a namespace other than "http://schemas.xmlsoap.org/wsdl/soap/" may require out of band negotiation.</failureMessage>
            <detailDescription>The use of a WSDL extension element or attribute from a namespace other than "http://schemas.xmlsoap.org/wsdl/soap/" may require out of band negotiation.</detailDescription>             
		    <additionalEntryTypeList/>
		    <prereqList/>
		    <referenceList>
		    	<reference profileID="BP11">E0013</reference>
		    </referenceList>
		    <comments>Extension elements other than those belonging to one of the following namespaces (...) are considered extensibility points.</comments>
		    <additionalInfo status="done" ownerSignOff="Ed Johns" editorSignOff="Simeon Greene" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="BP4201" entryType="definitions" type="informational" enabled="true">
		    <context>For a candidate wsdl:import element, where the location attribute or the namespace attribute has a value that is a relative URI, or a for soap:address element where the location attribute is a relative URI.</context> 
            <assertionDescription>The use of a relative URI as the value for a wsdl:import location or namespace attribute, or for a soap:address location attribute may require out of band coordination.</assertionDescription> 
            <failureMessage>A wsdl:import location or namespace attribute, or a soap:address location attribute is a relative URI.</failureMessage>
		    <detailDescription>The element(s) in question.</detailDescription>
		    <additionalEntryTypeList/>
		    <prereqList/>
		    <referenceList>
		        <reference profileID="BP11">E0016</reference>
		    </referenceList>
		    <comments/>
		    <additionalInfo status="done" ownerSignOff="Ed Johns" editorSignOff="Simeon Greene" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="BP4202" entryType="types" type="informational" enabled="true">
		    <context>For an XML schema definition defined in the wsdl:types element, or imported directly or indirectly by a schema definition defined in the wsdl:types element, which contains any schema annotation elements.</context>
		    <assertionDescription>An XML schema definition defined in the wsdl:types element, or imported directly or indirectly by a schema definition defined in the wsdl:types element, may use schema annotation elements as an extensibility mechanism.</assertionDescription>
		    <failureMessage>An XML schema defined in the wsdl:types element, or imported directly or indirectly by a schema defined in the wsdl:types element, contains annotation elements.</failureMessage>
		    <detailDescription>The annotation elements included in the schema.</detailDescription>
		    <additionalEntryTypeList/>
		    <prereqList>
            	<testAssertionID>BP2202</testAssertionID>		
				<testAssertionID>BP2011</testAssertionID>
		    </prereqList>
		    <referenceList>
		        <reference profileID="BP11">E0017</reference>
		    </referenceList>
		    <comments>Schema annotations are an extensibility point.</comments>
		    <additionalInfo status="done" ownerSignOff="Ed Johns" editorSignOff="Simeon Greene" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="BP2998" entryType="definitions" type="driverTestable" enabled="false">
			<context>Driver testable.</context>
			<assertionDescription>Driver testable.</assertionDescription>
			<detailDescription>Driver testable.</detailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2709</reference>
			</referenceList>
			<comments>All of these profile requirements are testable only by using a driver test program, since a test assertion would
require application-level knowledge of the message exchange.</comments>
		</testAssertion>
<testAssertion id="BP2999" entryType="definitions" type="notTestable" enabled="false">
			<context>Not testable.</context>
			<assertionDescription>Not testable.</assertionDescription>
			<detailDescription>Not testable.</detailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2025</reference>
				<reference profileID="BP11">R2027</reference>
				<reference profileID="BP11">R2008</reference>
				<reference profileID="BP11">R4002</reference>
				<reference profileID="BP11">R2200</reference>				
				<reference profileID="BP11">R2202</reference>
				<reference profileID="BP11">R2208</reference>
				<reference profileID="BP11">R2302</reference>
				<reference profileID="BP11">R2750</reference>
				<reference profileID="BP11">R2707</reference>
				<reference profileID="BP11">R2711</reference>
				<reference profileID="BP11">R2727</reference>
				<reference profileID="BP11">R2719</reference>
  				<reference profileID="BP11">R2722</reference>
				<reference profileID="BP11">R2724</reference>
				<reference profileID="BP11">R2725</reference>
				<reference profileID="BP11">R2741</reference>
				<reference profileID="BP11">R2742</reference>
				<reference profileID="BP11">R2743</reference>
				<reference profileID="BP11">R2747</reference>
				<reference profileID="BP11">R2748</reference>
				<reference profileID="BP11">R2751</reference>
				<reference profileID="BP11">R2752</reference>
				<reference profileID="BP11">R2800</reference>
				<reference profileID="BP11">R2009</reference>
				<reference profileID="BP11">R2114</reference>
				<reference profileID="BP11">R2030</reference>
				<reference profileID="BP11">E0014</reference>
				<reference profileID="BP11">E0015</reference>
			</referenceList>
			<comments>All of these profile requirements are NOT testable, or NOT testable using the 
			    current test tools. For example, some of these test assertions represent 
			    capabilities which can not be validated. 
                Note, BP2200 is NOT testable using the current test tools because any 
                BOM detected within a WSDL document is pre-processed by the WSDL
                reader/parser and hence becomes inaccessible.
                Note, R2724 could be tested. If a request is inconsistent with the WSDL for the request, 
                we could flag returning a non-error response. We currently do not check the status of a 
                request when we are processing the response. However this is within the scope of the test-tools 
                and we are tracking this omission defect/feature in bugzilla RE: bug#: 8.
            </comments>
		</testAssertion>
<testAssertion id="SSBP2209" entryType="binding" type="recommended" enabled="true">
			<context>For a candidate wsdl:binding element</context>
			<assertionDescription>The wsdl:binding binds every wsdl:part of a wsdl:message in the wsdl:portType to which it refers to one of soapbind:body, soapbind:header, soapbind:fault or soapbind:headerfault.</assertionDescription>
			<failureMessage>A wsdl:part of a wsdl:message in the wsdl:portType to which it refers does not bind to one of soapbind:body, soapbind:header, soapbind:fault or soapbind:headerfault in the wsdl:binding.</failureMessage>
			<failureDetailDescription>wsdl:binding.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2703</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="SSBP1">R2209</reference>
			</referenceList>
			<comments/>
			<additionalInfo status="proposedUpdate" ownerSignOff="Keith Stobie" editorSignOff="David Lazoun" testCasesCompleted="no"/>
		</testAssertion>
<testAssertion id="SSBP2403" entryType="binding" type="required" enabled="true">
			<context>For a candidate wsdl:binding element</context>
			<assertionDescription>Descendant elements and attributes in the wsdl:binding are not from the namespaces of WSDL MIME, HTTP GET/POST or DIME binding extensions.</assertionDescription>
			<failureMessage>A descendant element or attribute in the wsdl:binding is from a namespace of WSDL MIME, HTTP GET/POST or DIME binding extensions.</failureMessage>
			<failureDetailDescription>Defective descendant element or attribute</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP2402</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="SSBP1">R9801</reference>
			</referenceList>
			<comments>
                The namespace for the WSDL MIME, HTTP GET/POST and DIME binding extensions respectively are assumed to be:
                    http://schemas.xmlsoap.org/wsdl/mime/
                    http://schemas.xmlsoap.org/wsdl/http/
                    http://schemas.xmlsoap.org/ws/2002/04/dime/wsdl/
            </comments>
			<additionalInfo status="proposedUpdate" ownerSignOff="Ed Johns" editorSignOff="Ed Johns" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="SSBP2999" entryType="definitions" type="notTestable" enabled="false">
			<context>Not testable.</context>
			<assertionDescription>Not testable.</assertionDescription>
			<detailDescription>Not testable.</detailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="SSBP1">R4001</reference>
				<reference profileID="SSBP1">R9800</reference>
				<reference profileID="SSBP1">R9802</reference>
</referenceList>
			<comments>All of these profile requirements are NOT testable, or NOT testable using the current test tools.  For example, some of these test assertions represent capabilities which can not be validated.</comments>
			<additionalInfo status="proposedUpdate" ownerSignOff="Ed Johns" editorSignOff="Ed Johns" testCasesCompleted="no"/>
		</testAssertion>
</artifact>
<artifact type="message">
<specificationReferenceList>
<specification name="Simple Object Access Protocol (SOAP) 1.1" location="http://www.w3.org/TR/SOAP/"/>
<specification name="Extensible Markup Language (XML) 1.0 (Second Edition)" location="http://www.w3.org/TR/REC-xml"/>
<specification name="RFC2616: Hypertext Transfer Protocol -- HTTP/1.1" location="http://www.ietf.org/rfc/rfc2616"/>
<specification name="RFC2965: HTTP State Management Mechanism" location="http://www.ietf.org/rfc/rfc2965"/>
<specification name="RFC2818: HTTP Over TLS" location="http://www.ietf.org/rfc/rfc2818"/>
<specification name="RFC2246: The TLS Protocol Version 1.0" location="http://www.ietf.org/rfc/rfc2246"/>
<specification name="The SSL Protocol Version 3.0" location="http://wp.netscape.com/eng/ssl3/draft302.txt"/>
<specification name="RFC2459: Internet X.509 Public Key Infrastructure Certificate and CRL Profile" location="http://www.ietf.org/rfc/rfc2459"/>
</specificationReferenceList>
<description>
      The Basic Profile requires support for SOAP 1.1 and HTTP 1.0 or 1.1.
    The Simple SOAP Binding Profile requires support for SOAP 1.1 and HTTP 1.0 or 1.1.</description>
<testAssertion id="BP1004" entryType="requestMessage" type="required" enabled="true">
			<context>For a candidate request message in the message log file</context>
			<assertionDescription>The request message is a POST message, without any use of framework extension.</assertionDescription>
			<failureMessage>The message is not an HTTP POST message, or makes use of HTTP framework extension.</failureMessage>
			<failureDetailDescription>All HTTP headers.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R1132</reference>
				<reference profileID="BP11">R1108</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1006" entryType="requestMessage" type="required" enabled="true">
			<context>For a candidate request message in the message log file, when a SOAPAction header is present</context>
			<assertionDescription>The SOAPAction header contains a quoted string of any value, including "".</assertionDescription>
			<failureMessage>SOAPAction HTTP header does not contain a quoted string.</failureMessage>
			<failureDetailDescription>All HTTP headers.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R1109</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1116" entryType="requestMessage" type="required" enabled="true">
			<context>For a candidate request message in the message log file, when a SOAPAction header is present</context>
			<assertionDescription>The SOAPAction header contains a quoted string that has same value as the value of the soapbind:operation/@soapAction attribute, and an empty string ("") if there is no such attribute.</assertionDescription>
			<failureMessage>SOAPAction header does not contain the correct string value.</failureMessage>
			<failureDetailDescription>{All HTTP headers}{soapAction value from the soap:binding}.</failureDetailDescription>
			<additionalEntryTypeList>
				<wsdlInput>binding</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1006</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2744</reference>
				<reference profileID="BP11">R2745</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1001" entryType="anyMessage" type="recommended" enabled="true">
			<context>For a candidate message in the log file, that is either a POST HTTP request, or a response to a POST HTTP request</context>
			<assertionDescription>If it is a request, the arg #2 of POST is &lt;HTTP/1.1&gt;. If absent, first line of the body is: HTTP-Version = HTTP/1.1. If it is a response, it starts with  &lt;HTTP/1.1&gt;</assertionDescription>
			<failureMessage>The message is not sent using HTTP/1.1.</failureMessage>
			<failureDetailDescription>All HTTP headers.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1002</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1140</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1002" entryType="anyMessage" type="required" enabled="true">
			<context>For a candidate message in the log file, that is either a POST HTTP request, or a response to a POST HTTP request</context>
			<assertionDescription>If it is a request, the arg #2 of POST is &lt;HTTP/1.1&gt; or &lt;HTTP/1.0&gt;. If absent, first line of the body is: HTTP-Version = HTTP/1.1. (or HTTP/1.0). If it is a response, it starts with  &lt;HTTP/1.1&gt; or &lt;HTTP/1.0&gt;</assertionDescription>
			<failureMessage>The message is not sent using HTTP/1.1 or HTTP/1.0.</failureMessage>
			<failureDetailDescription>All HTTP headers.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R1141</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1010" entryType="responseMessage" type="required" enabled="true">
			<context>For a candidate response message in the message log file, which is bound to a One-Way wsdl:operation</context>
			<assertionDescription>It does not contain a soap:Envelope: the HTTP entity-body is empty </assertionDescription>
			<failureMessage>One-Way operation response contains a soap:Envelope (HTTP entity-body must be empty) </failureMessage>
			<detailDescription/>
			<additionalEntryTypeList>
				<messageInput>requestMessage</messageInput>
				<wsdlInput>operation</wsdlInput>
			</additionalEntryTypeList>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2714</reference>
			</referenceList>
			<comments>Need the request to determine if it is a One-Way.  
We could have targeted the request as well (as primary entry), and correlate with the response.</comments>
		</testAssertion>
<testAssertion id="BP1101" entryType="responseMessage" type="recommended" enabled="true">
			<context>For a candidate response message in the log file, that does not contain a SOAP message and that does not contain an HTTP 4xx status code</context>
			<assertionDescription>The response message, if successfully processed at HTTP level, is sent using either a "200 OK" or "202 Accepted" HTTP status code.</assertionDescription>
			<failureMessage>A response message without a SOAP message, is not using either a "200 OK" or 
"202 Accepted" HTTP status code, though successful at HTTP level.</failureMessage>
			<failureDetailDescription>Complete message.</failureDetailDescription>
			<additionalEntryTypeList>
				<messageInput>requestMessage</messageInput>
			</additionalEntryTypeList>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R1112</reference>
			</referenceList>
			<comments>This test assertion is targeted at one-way operations.</comments>
		</testAssertion>
<testAssertion id="BP1103" entryType="responseMessage" type="recommended" enabled="true">
			<context>For a candidate response message in the message log file, associated with a request message that does not contain an HTTP POST method</context>
			<assertionDescription>The response contains a "405 Method not Allowed" HTTP status code.</assertionDescription>
			<failureMessage>The response message to a request that was not a POST message, did not contain an 405 HTTP status code.</failureMessage>
			<failureDetailDescription>Both the request and response message.</failureDetailDescription>
			<additionalEntryTypeList>
				<messageInput>requestMessage</messageInput>
			</additionalEntryTypeList>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R1114</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP4103" entryType="anyMessage" type="informational" enabled="true">
		    <context>For a candidate message in the message log file containing an HTTP Authentication header field with an authentication mechanism other than "Basic" or "Digest"</context>
		    <assertionDescription>The message contains an HTTP Authentication header field with an authentication mechanism other than "Basic" or "Digest".</assertionDescription>
		    <detailDescription>HTTP authentication allows for extension schemes, arbitrary digest hash algorithms and parameters.</detailDescription>
		    <additionalEntryTypeList/>
		    <prereqList/>
		    <referenceList>
		        <reference profileID="BP11">E0007</reference>
		    </referenceList>
		    <comments>HTTP Authentication is an extensibility point for HTTP 1.1.</comments>
		    <additionalInfo status="done" ownerSignOff="Simeon Greene" editorSignOff="Simeon Greene" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="BP4104" entryType="anyMessage" type="informational" enabled="true">
		    <context>For a candidate message in the message log file containing an HTTP Header field that is not from the following list of specified header fields: (http://www.mnot.net/drafts/draft-nottingham-http-header-reg-00.txt)</context>
		    <assertionDescription>The message contains an HTTP Header field that is not from the following list of specified header fields: (http://www.mnot.net/drafts/draft-nottingham-http-header-reg-00.txt)</assertionDescription>
		    <failureMessage>The message contains an HTTP Header field that is not from the following list of specified header fields: (http://www.mnot.net/drafts/draft-nottingham-http-header-reg-00.txt)</failureMessage>
		    <detailDescription>HTTP allows arbitrary headers to occur in messages.</detailDescription>
		    <additionalEntryTypeList/>
		    <prereqList/>
		    <referenceList>
		        <reference profileID="BP11">E0008</reference>
		    </referenceList>
		    <comments>If all HTTP headers in a message are in the standardized list of draft-nottingham-http-header-reg-00 it will cause the informationalassertion 4104 to be notApplicable; otherwise 4101 will pass and headers not in the draft-nottingham-http-header-reg-00 will be listed.</comments>
		    <additionalInfo status="done" ownerSignOff="Simeon Greene" editorSignOff="Simeon Greene" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="BP4105" entryType="anyMessage" type="informational" enabled="true">
		    <context>For a candidate message in the message log file containing a Content-encoding HTTP header field with a value other than "gzip", "compress" or "deflate"</context>
		    <assertionDescription>The contained Content-encoding HTTP header field has a value other than "gzip", "compress" or "deflate".</assertionDescription>
		    <failureMessage>The Content-encoding HTTP header field has a value other than "gzip", "compress" or "deflate".</failureMessage>
		    <detailDescription>The set of content-codings allowed by HTTP is open-ended.</detailDescription>
		    <additionalEntryTypeList/>
		    <prereqList/>
		    <referenceList>
		    <reference profileID="BP11">E0010</reference>
		    </referenceList>
		    <comments>Any Content-encoding header field with a value other than the specified list is considered to be an extensibility point.</comments>
		    <additionalInfo status="done" ownerSignOff="Ajai Honnur" editorSignOff="David Lauzon" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="BP4106" entryType="responseMessage" type="informational" enabled="true">
		    <context>For a candidate response message in the message log file containing a transfer-encoding HTTP header field with a value other than "chunked"</context>
		    <assertionDescription>The contained transfer-encoding HTTP header field has a value other than "chunked".</assertionDescription>
		    <failureMessage>The contained transfer-encoding HTTP header field has a value other than "chunked".</failureMessage>
		    <detailDescription>Any Transfer-encoding header field with a value other than chunked is considered to be an extensibility point.</detailDescription>
		    <additionalEntryTypeList/>
		    <prereqList/>
		    <referenceList>
		        <reference profileID="BP11">E0011</reference>
		    </referenceList>
		    <comments>Any Transfer-encoding header field with a value other than chunked is considered to be an extensibility point.</comments>
		    <additionalInfo status="done" ownerSignOff="Rami Jaamour" editorSignOff="" testCasesCompleted="no"/>
		</testAssertion>
<testAssertion id="BP4107" entryType="requestMessage" type="informational" enabled="true">
		    <context>For a request message containing an Upgrade header field in the HTTP Headers.</context>
		    <assertionDescription>The request message contains an Upgrade header field in the HTTP Headers.</assertionDescription>
		    <failureMessage>The message contains an Upgrade header field in its HTTP Headers.</failureMessage>
		    <detailDescription>The Upgrade header field is considered an HTTP Extensibility point.</detailDescription>
		    <additionalEntryTypeList/>
		    <prereqList/>
		    <referenceList>
		        <reference profileID="BP11">E0012</reference>
		    </referenceList>
		    <comments>The Upgrade header field is considered an HTTP Extensibility point.</comments>
		    <additionalInfo status="done" ownerSignOff="Rami Jaamour" editorSignOff="Simeon Greene" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="BP1998" entryType="anyMessage" type="driverTestable" enabled="false">
			<context>Driver testable.</context>
			<assertionDescription>Driver testable.</assertionDescription>
			<detailDescription>Driver testable.</detailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
			</referenceList>
			<comments>All of these profile requirements are testable only by using a driver test program, since a test assertion would
require application-level knowledge of the message exchange.</comments>
		</testAssertion>
<testAssertion id="BP1999" entryType="anyMessage" type="notTestable" enabled="false">
			<context>Not testable.</context>
			<assertionDescription>Not testable.</assertionDescription>
			<detailDescription>Not testable.</detailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R1115</reference>
				<reference profileID="BP11">R1122</reference>
				<reference profileID="BP11">R1113</reference>
				<reference profileID="BP11">R1119</reference>
				<reference profileID="BP11">R1120</reference>
				<reference profileID="BP11">R1121</reference>
				<reference profileID="BP11">R1123</reference>
				<reference profileID="BP11">R1124</reference>
				<reference profileID="BP11">R1125</reference>
				<reference profileID="BP11">R1127</reference>
				<reference profileID="BP11">R1130</reference>
				<reference profileID="BP11">R1131</reference>
				<reference profileID="BP11">R1127</reference>
				<reference profileID="BP11">R5000</reference>
				<reference profileID="BP11">R5001</reference>
				<reference profileID="BP11">R5010</reference>
				<reference profileID="BP11">E0009</reference>
				<reference profileID="BP11">E0019</reference>
				<reference profileID="BP11">E0020</reference>
				<reference profileID="BP11">E0021</reference>
				<reference profileID="BP11">E0022</reference>
				<reference profileID="BP11">E0023</reference>
			</referenceList>
			<comments>All of these profile requirements are NOT testable.  Some of these test assertions represent capabilities which
can not be validated.</comments>
		</testAssertion>
<testAssertion id="SSBP1003" entryType="anyMessage" type="required" enabled="true">
			<context>For a candidate message in the log file, which has a non-empty entity-body</context>
			<assertionDescription>
                The logged SOAP envelope is a UTF-8 transcript of an envelope originally encoded as UTF-8 or UTF-16. 
                The HTTP Content-Type header's charset value is either UTF-8 or UTF-16. Looking at the messageContent 
                element of the logged message, either 
                (1) it has a BOM attribute which maps the charset value in the Content-Type header, or 
                (2) it has it has an XML declaration which matches the charset value in the Content-Type header, or 
                (3) there is no BOM attribute and no XML declaration, and the charset value is UTF-8.
            </assertionDescription>
			<failureMessage>Either (1a) the message contains a Content-Type header but no charset value, or (1b) the charset value is neither UTF-8 nor UTF-16, or 
                (2) there is a BOM attribute in the messageContent element, but its value does not match the charset value, or 
                (3) there is an XML declaration, and the charset value does not match its value, or 
                (4) there is no BOM attribute, no XML declaration, and the charset value in Content-Type header is not UTF-8.</failureMessage>
			<failureDetailDescription>Complete message.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="SSBP1">R1012</reference>
				<reference profileID="SSBP1">R1018</reference>
			</referenceList>
			<comments>The optional BOM attribute of the messagContent element is added by the Monitor into the log file, based on the original value in the HTTP payload. </comments>
			<additionalInfo status="proposedUpdate" ownerSignOff="Ed Johns" editorSignOff="Ed Johns" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="SSBP5100" entryType="anyMessage" type="required" enabled="true">
			<context>For a candidate message in the log file, with an HTTP entity-body.</context>
			<assertionDescription>The SOAP envelope is the exclusive payload of the HTTP entity-body.</assertionDescription>
			<failureMessage>The SOAP envelope is not the exclusive payload of the message HTTP entity-body.</failureMessage>
			<failureDetailDescription>The message in question.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="SSBP1">R9700</reference>
			</referenceList>
			<comments/>
			<additionalInfo status="new" ownerSignOff="Ed Johns" editorSignOff="" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="SSBP5101" entryType="anyMessage" type="required" enabled="true">
			<context>For a candidate message in the log file.</context>
			<assertionDescription>A message must have a "Content-Type" HTTP header field.  The "Content-Type" HTTP header field must have a field-value whose media type is "text/xml".</assertionDescription>
			<failureMessage>The message either (1) did not have a "Content-Type" HTTP header field, or (2) the "Content-Type" HTTP header field had a field-value whose media type was something other than "text/xml"</failureMessage>
			<failureDetailDescription>The value of the media-type field, if any.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="SSBP1">R9702</reference>
				<reference profileID="SSBP1">R9703</reference>
			</referenceList>
			<comments/>
			<additionalInfo status="new" ownerSignOff="Ed Johns" editorSignOff="Ed Johns" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="SSBP1999" entryType="anyMessage" type="notTestable" enabled="false">
			<context>Not testable.</context>
			<assertionDescription>Not testable.</assertionDescription>
			<detailDescription>Not testable.</detailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="SSBP1">R1010</reference>
				<reference profileID="SSBP1">R1019</reference>
			</referenceList>
			<comments>All of these profile requirements are NOT testable.  Some of these test assertions represent capabilities which can not be validated.</comments>
			<additionalInfo status="proposedUpdate" ownerSignOff="Ed Johns" editorSignOff="Ed Johns" testCasesCompleted="no"/>
		</testAssertion>
</artifact>
<artifact type="envelope">
<specificationReferenceList>
<specification name="SOAP 1.1, Section 4" location="http://www.w3.org/TR/soap/#_Toc478383494"/>
</specificationReferenceList>
<description>SOAP 1.1 defines a structure for transmitting messages, the envelope.  The profile mandates the use of that structure.SOAP 1.1 defines a structure for transmitting messages, the envelope.  The profile mandates the use of that structure.</description>
<testAssertion id="BP1107" entryType="responseEnvelope" type="recommended" enabled="true">
			<context>For a candidate response envelope containing a soap:Fault element</context>
			<assertionDescription>The contained soap:Fault element is defined in the wsdl:binding.</assertionDescription>
			<failureMessage>The response envelope contained soap:Fault element(s), but they 
were not defined in the WSDL description.</failureMessage>
			<failureDetailDescription>Undefined soap:Fault element(s).</failureDetailDescription>
			<additionalEntryTypeList>
				<wsdlInput>binding</wsdlInput>
			</additionalEntryTypeList>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R2740</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1308" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate envelope containing a soap:Body element</context>
			<assertionDescription>No child element of soap:Body has a soap:encodingStyle attribute.</assertionDescription>
			<failureMessage>A child of the soap:Body element has a soap:encodingStyle attribute.</failureMessage>
			<failureDetailDescription>SOAP message</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1006</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1011" entryType="requestEnvelope" type="required" enabled="true">
			<context>For a candidate envelope in a request message</context>
			<assertionDescription>The content of the envelope matches the definition in the WSDL document. In case of a doc-lit binding, the child element of soap:body is an instance of the global element declaration referenced by the corresponding wsdl:part. If the message has "parts", the order of the part elements in the soap:body of the wired message, is same as that of the wsdl:partS, in the wsdl:message that describes it for each of the wsdl:part elements bound to the envelope's corresponding soapbind:body element.</assertionDescription>
			<failureMessage>The content of the envelope does not match the wsdl:message definition. The order of parts in soap:body does not match the order of wsdl:partS in wsdl:message that describes it for each of the wsdl:part elements bound to the envelope's corresponding soapbind:body element; or the child element of soap:body is not an instance of the global element declaration referenced by the corresponding wsdl:part.</failureMessage>
			<failureDetailDescription>Non-matching WSDL operation and envelope.</failureDetailDescription>
			<additionalEntryTypeList>
				<wsdlInput>operation</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
				<testAssertionID>BP1308</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2301</reference>
				<reference profileID="BP11">R2712</reference>
				<reference profileID="BP11" role="collateral">R2710</reference>
				<reference profileID="BP11" role="collateral">R2742</reference>
				<reference profileID="BP11" role="collateral">R2743</reference>
				<reference profileID="BP11" role="collateral">R2748</reference>
			</referenceList>
			<comments>R2710, R2742 R2743 and R2748 used as "assumed" reqts, not reqts to verify. The soap:encodingStyle verification done by pre-req BP1308 on children, is not done for grand-children (BP1318 coul dnot be a pre-req)</comments>
		</testAssertion>
<testAssertion id="BP1013" entryType="responseEnvelope" type="required" enabled="true">
			<context>For a candidate envelope in a response message, if it does not contain a soap:Fault</context>
			<assertionDescription>The content of the envelope matches the definition in the WSDL document. In case of an rpc-lit binding, the body contains a wrapper element that matches theoperation name. In case of a doc-lit binding, the child element of soap:body is an instance of the global element declaration referenced by the corresponding wsdl:part. If the message has "parts", the order of the part elements in the soap:body of the wired message, is same as that of the wsdl:partS, in the wsdl:message that describes it for each of the wsdl:part elements bound to the envelope's corresponding soapbind:body element.</assertionDescription>
			<failureMessage>The content of the envelope does not match the wsdl:message definition. The order of parts in soap:body does not match the order of wsdl:partS in wsdl:message that describes it for each of the wsdl:part elements bound to the envelope's corresponding soapbind:body element; or it has a doc-lit binding but the child element of soap:body is not an instance of the global element declaration referenced by the corresponding wsdl:part; or it has an rpc-lit binding but no wrapper element.</failureMessage>
			<failureDetailDescription>Non-matching WSDL operation and envelope.</failureDetailDescription>
			<additionalEntryTypeList>
				<messageInput>requestEnvelope</messageInput>
				<wsdlInput>operation</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2301</reference>
				<reference profileID="BP11">R2712</reference>
				<reference profileID="BP11" role="collateral">R2710</reference>
				<reference profileID="BP11" role="collateral">R2742</reference>
				<reference profileID="BP11" role="collateral">R2743</reference>
				<reference profileID="BP11" role="collateral">R2748</reference>
			</referenceList>
			<comments>R2710, R2742 R2743 and R2748 used as "assumed" reqts, not reqts to verify. The test assertion also verifies the wrapper element in case of an rpc-binding (in a same way as BP1005 which could not be a pre-requisite due to a narrower context)</comments>
		</testAssertion>
<testAssertion id="BP1204" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate envelope</context>
			<assertionDescription>The soap:body of the envelope does not contain the soapenc:arrayType attribute.</assertionDescription>
			<failureMessage>The soap:body of an envelope contains the soapenc:arrayType attribute.</failureMessage>
			<failureDetailDescription>SOAP envelope.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2113</reference>
			</referenceList>
			<comments>R2113 has been interpreted as applying to any message body, as it is unclear how to narrow to serialized array declarations. The narrowing of the context here,may not be sufficient to restrict properly the application of this TA.</comments>
		</testAssertion>
<testAssertion id="BP1301" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate envelope containing a "mustUnderstand" attribute</context>
			<assertionDescription>The "mustUnderstand" attribute in the envelope has one of two values: 1, 0. </assertionDescription>
			<failureMessage>The "mustUnderstand" attribute in an envelope has a value different from: 1, 0.</failureMessage>
			<failureDetailDescription>SOAP envelope, plus envelope of a request message if it is a response.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1013</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1305" entryType="responseEnvelope" type="required" enabled="true">
			<context>For a candidate envelope in a response message containing a soap:Fault element</context>
			<assertionDescription>The soap:Fault element is contained in an HTTP 500 message with "Server" Error code. </assertionDescription>
			<failureMessage>The soap:Fault message is not returned in an HTTP 500 message.</failureMessage>
			<failureDetailDescription>SOAP envelope.</failureDetailDescription>
			<additionalEntryTypeList>
				<messageInput>responseMessage</messageInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1126</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1306" entryType="responseEnvelope" type="required" enabled="true">
			<context>For a candidate envelope in a response message containing a soap:Fault element</context>
			<assertionDescription>The soap:Fault element does not have children other than soap:faultcode, soap:faultstring, soap:faultactor or soap:detail.</assertionDescription>
			<failureMessage>One or more soap:Fault child elements are not standard, i.e. is neither soap:faultcode, soap:faultstring, soap:faultactor nor soap:detail.</failureMessage>
			<failureDetailDescription>SOAP envelope</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1000</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1031" entryType="responseEnvelope" type="recommended" enabled="true">
			<context>For a candidate envelope in a response message containing a soap:Fault element</context>
			<assertionDescription>The content of the soap:Fault element does not make use of the SOAP 1.1 dot notation, i.e. is a string without a dot character in it.</assertionDescription>
			<failureMessage>A soap:Fault element makes use of the SOAP 1.1 dot notation.</failureMessage>
			<failureDetailDescription>SOAP envelope</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1031</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1032" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate envelope</context>
			<assertionDescription>The soap:Envelope, soap:Header, and soap:Body elements do not have any attributes in the namespace "http://schemas.xmlsoap.org/soap/envelope/"</assertionDescription>
			<failureMessage>A soap:Envelope, soap:Header, or soap:Body element has an attribute in the namespace "http://schemas.xmlsoap.org/soap/envelope/".</failureMessage>
			<failureDetailDescription>SOAP envelope</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1032</reference>
			</referenceList>
			<comments/>
		    <additionalInfo status="done" ownerSignOff="David Lauzon" editorSignOff="" testCasesCompleted="no"/>
		</testAssertion>
<testAssertion id="BP1033" entryType="anyEnvelope" type="recommended" enabled="true">
			<context>For a candidate envelope</context>
			<assertionDescription>The SOAP envelope does not contain the namespace declaration xmlns:xml="http://www.w3.org/XML/1998/namespace".</assertionDescription>
			<failureMessage>The SOAP envelope contains the namespace declaration xmlns:xml="http://www.w3.org/XML/1998/namespace".</failureMessage>
			<failureDetailDescription>SOAP envelope</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1033</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1316" entryType="responseEnvelope" type="required" enabled="true">
			<context>For a candidate envelope in a response message containing a soap:Fault element</context>
			<assertionDescription>The soap:Fault element children (soap:faultcode, soap:faultstring, soap:faultactor or soap:detail) are unqualified.</assertionDescription>
			<failureMessage>One or more soap:Fault child elements are qualified.</failureMessage>
			<failureDetailDescription>SOAP envelope</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1001</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1307" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate envelope containing elements with namespace "http://schemas.xmlsoap.org/soap/envelope/"</context>
			<assertionDescription>The envelope contains elements that are namespaced "http://schemas.xmlsoap.org/soap/envelope/" do not have a soap:encodingStyle attribute.</assertionDescription>
			<failureMessage>The envelope contains one or elements namespaced "http://schemas.xmlsoap.org/soap/envelope/" having a soap:encodingStyle attribute.</failureMessage>
			<failureDetailDescription>SOAP envelope</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1005</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1318" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate non-fault envelope containing a soap:body with at least one grandchild, and is referred by an rpc-literal binding</context>
			<assertionDescription>The grandchild elements of soap:Body referred by an rpc-literal binding do not have a soap:encodingStyle attribute.</assertionDescription>
			<failureMessage>At least one grandchild of the soap:Body element referred by an rpc-literal binding has a soap:encodingStyle attribute.</failureMessage>
			<failureDetailDescription>SOAP envelope</failureDetailDescription>
			<additionalEntryTypeList>
				<wsdlInput>operation</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
				<testAssertionID>BP1202</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1007</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1008" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate non-fault envelope containing a soap:body with at least one element, and that is referred by a binding style rpc-literal</context>
			<assertionDescription>The envelope has part accessor elements for parameters and return value, in no namespaces, but the descendants of these are namespace qualified as defined by the schema in which their types are defined.</assertionDescription>
			<failureMessage>The envelope has part accessor elements for parameters and return value, within namespaces, or the descendants of these elements are not namespace qualified as defined by the schema in which their types are defined.</failureMessage>
			<detailDescription/>
			<additionalEntryTypeList>
				<wsdlInput>binding</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2735</reference>
				<reference profileID="BP11">R2737</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1211" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate non-fault envelope containing a soap:body with at least one element, and that is referred by a binding style rpc-literal</context>
			<assertionDescription>Part accessor elements in the envelope do not have an xsi:nil attribute with a value of "1" or "true".</assertionDescription>
			<failureMessage>Envelope referenced by an rpc-literal binding has part accessor elements with an xsi:nil attribute with a value of "1" or "true".</failureMessage>
			<detailDescription/>
			<additionalEntryTypeList>
				<wsdlInput>binding</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2211</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1212" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate non-fault envelope containing a soap:body with at least one element</context>
			<assertionDescription>The envelope contains exactly one part accessor element for each of the wsdl:part elements bound to the envelope's corresponding soapbind:body element.</assertionDescription>
			<failureMessage>The content of the soap:Body element is inconsistent with its description. The envelope does not contain exactly one part accessor element for each of the wsdl:part elements bound to the envelope's corresponding soapbind:body element.</failureMessage>
			<detailDescription/>
			<additionalEntryTypeList>
				<wsdlInput>binding</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2212</reference>
			</referenceList>
			<comments/>
		    <additionalInfo status="done" ownerSignOff="David Lauzon" editorSignOff="" testCasesCompleted="no"/>
		</testAssertion>
<testAssertion id="BP1213" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate non-fault envelope containing a soap:Body element, and is referred by a doc-literal binding</context>
			<assertionDescription>The envelope has no element content in the soap:Body element if the value of the parts attribute of the soapbind:body is an empty string in the corresponding doc-literal description.</assertionDescription>
			<failureMessage>The soap:Body element must be empty when, in the corresponding doc-literal description, the value of the parts attribute of soapbind:body is an empty string.</failureMessage>
			<failureDetailDescription>SOAP envelope</failureDetailDescription>
			<additionalEntryTypeList>
				<wsdlInput>binding</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2213</reference>
			</referenceList>
			<comments/>
		    <additionalInfo status="done" ownerSignOff="David Lauzon" editorSignOff="" testCasesCompleted="no"/>
		</testAssertion>
<testAssertion id="BP1214" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate non-fault envelope containing a soap:Body element, and is referred by a rpc-literal binding</context>
			<assertionDescription>The envelope does not contain any part accessor elements if the value of the parts attribute of the soapbind:body is an empty string in the corresponding rpc-literal description.</assertionDescription>
			<failureMessage>The content of the soap:Body element is inconsistent with its description. The envelope must not have any part accessor elements when, in the corresponding rpc-literal description, the value of the parts attribute of soapbind:body is an empty string.</failureMessage>
			<failureDetailDescription>SOAP envelope</failureDetailDescription>
			<additionalEntryTypeList>
				<wsdlInput>binding</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2214</reference>
			</referenceList>
			<comments/>
		    <additionalInfo status="done" ownerSignOff="David Lauzon" editorSignOff="" testCasesCompleted="no"/>
		</testAssertion>
<testAssertion id="BP1755" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate non-fault envelope containing a soap:body with at least one element, and that is referred by a binding style rpc-literal</context>
			<assertionDescription>Each part accessor element in the envelope has a local name of the same value as the name attribute of the corresponding wsdl:part element.</assertionDescription>
			<failureMessage>The envelope referenced by an rpc-literal binding has a part accessor element with a local name that is not the same value as the name attribute of the corresponding wsdl:part element.</failureMessage>
			<detailDescription/>
			<additionalEntryTypeList>
				<wsdlInput>binding</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2755</reference>
			</referenceList>
			<comments/>
			<additionalInfo status="done" ownerSignOff="David Lauzon" editorSignOff="" testCasesCompleted="no"/>
		</testAssertion>
<testAssertion id="BP1005" entryType="responseEnvelope" type="required" enabled="true">
			<context>For a candidate non-fault envelope in a response message, that has a soap:body with at least a child element, and is 
referenced by a rpc-literal binding to a WSDL request-response operation</context>
			<assertionDescription>The envelope has a wrapper element with a name equal to the name attribute on the wsdl:operation element suffixed with string "Response".</assertionDescription>
			<failureMessage>Wrapper element in the envelope does not have a value equal to the name attribute on the wsdl:operation element suffixed with string "Response".</failureMessage>
			<detailDescription/>
			<additionalEntryTypeList>
				<messageInput>requestEnvelope</messageInput>
				<wsdlInput>binding</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
			    <testAssertionID>BP1601</testAssertionID>
			    <testAssertionID>BP1202</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2729</reference>
			</referenceList>
			<comments>Assume a correlation with WSDL binding entry is needed.</comments>
		</testAssertion>
<testAssertion id="BP1302" entryType="responseEnvelope" type="recommended" enabled="true">
			<context>For an envelope in a response message containing a soap:Fault element with a faultcode child element</context>
			<assertionDescription>The soap:faultcode value in the soap:Fault element of the envelope is either one of: VersionMismatch, MustUnderstand, Client, Server, or is qualified by a namespace.</assertionDescription>
			<failureMessage>The soap:faultcode value in the soap:Fault element of the envelope is not one of: VersionMismatch, MustUnderstand, Client, Server, or is not qualified by a namespace.</failureMessage>
			<failureDetailDescription>SOAP envelope in a response message.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1004</reference>
			</referenceList>
			<comments>If namespace qualified, the namespace is other than http://schemas.xmlsoap.org/soap/envelope/, per (assumed) conformance to SOAP.</comments>
		</testAssertion>
<testAssertion id="BP1203" entryType="responseEnvelope" type="required" enabled="true">
			<context>For an envelope in a response message containing a soap:Fault element, if there is any qualified attribute for the detail element</context>
			<assertionDescription>The namespace of a qualified attribute appearing on the detail element in the soap:Fault
is a foreign namespace, different from  "http://schemas.xmlsoap.org/soap/envelope/".</assertionDescription>
			<failureMessage>The soap:Fault message contains detail element with attributes qualified with a non-foreign namespace.</failureMessage>
			<failureDetailDescription>SOAP message.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1003</reference>
			</referenceList>
			<comments>this is a narrowing of the schema, which allows any namespace.</comments>
		</testAssertion>
<testAssertion id="BP1100" entryType="responseEnvelope" type="recommended" enabled="true">
			<context>For a candidate non-fault envelope in a response message</context>
			<assertionDescription>The message uses a "200 OK" HTTP status code.</assertionDescription>
			<failureMessage>The envelope of the response message does not contain a soap:Fault and the message does not use a "200 OK" HTTP status code.</failureMessage>
			<failureDetailDescription>Complete message.</failureDetailDescription>
			<additionalEntryTypeList>
				<messageInput>responseMessage</messageInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1111</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1600" entryType="anyEnvelope" type="required" enabled="true">
		    <context>For a candidate envelope</context>
		    <assertionDescription>The envelope conforms to the structure specified in SOAP 1.1 Section 4.</assertionDescription>
		    <failureMessage>The envelope does not conform to the structure specified in SOAP 1.1 Section 4</failureMessage>
		    <failureDetailDescription>SOAP envelope.</failureDetailDescription>
		    <additionalEntryTypeList/>
		    <prereqList/>
		    <referenceList>
		            <reference profileID="BP11">R9980</reference>
		    </referenceList>
		    <comments/>
		    <additionalInfo status="done" ownerSignOff="Ajai Honnur" editorSignOff="" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="BP1601" entryType="anyEnvelope" type="required" enabled="true">
       		<context>For a candidate non-empty envelope</context>
       		<assertionDescription>The soap:envelope and soap:body are well-formed XML 1.0 documents. </assertionDescription>
       		<failureMessage>The soap:Envelope or soap:Body does not conform to XML 1.0.</failureMessage>
       		<failureDetailDescription>{SOAP envelope}{any  XML parser error messages}</failureDetailDescription>
       		<additionalEntryTypeList/>
       		<prereqList/>
       		<referenceList>
       			<reference profileID="BP11"/>
       		</referenceList>
       		<comments>Assumed in underlying spec, though no formal Rxxxx for it. 1st step in a 3-phase verification process: XMLvalid + namespace check + schemavalid.</comments>
       	</testAssertion>
<testAssertion id="BP1201" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate envelope</context>
			<assertionDescription>The envelope has a document element named "Envelope" with namespace http://schemas.xmlsoap.org/soap/envelope/. </assertionDescription>
			<failureMessage>The envelope does not use SOAP 1.1, i.e. does not have a document element named "Envelope" or a namespace value of http://schemas.xmlsoap.org/soap/envelope/.</failureMessage>
			<failureDetailDescription>SOAP envelope.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1601</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11"/>
			</referenceList>
			<comments>Assumed in underlying spec, though no formal Rxxxx for it (run-time version of R2700). 2nd step in a 3-phase verification process: XMLvalid + namespace check + schemavalid.</comments>
		</testAssertion>
<testAssertion id="BP1202" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate envelope containing a soap:body with at least one child element</context>
			<assertionDescription>Each child element (if any) of the soap:Body element is namespace qualified (not the grandchildren).</assertionDescription>
			<failureMessage>A child element of the soap:Body element is not namespace qualified.</failureMessage>
			<failureDetailDescription>SOAP envelope.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1014</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1701" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate envelope</context>
			<assertionDescription>The envelope conforms to the SOAP schema located at http://schemas.xmlsoap.org/soap/envelope/</assertionDescription>
			<failureMessage>The envelope does not conform to the SOAP schema located at http://schemas.xmlsoap.org/soap/envelope/.</failureMessage>
			<failureDetailDescription>SOAP message.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1201</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11"/>
			</referenceList>
			<comments>Assumed in underlying spec, though no formal Rxxxx for it. 3rd step in a 3-phase verification process: XMLvalid + namespace check + schemavalid.</comments>
		</testAssertion>
<testAssertion id="BP1012" entryType="responseEnvelope" type="required" enabled="true">
			<context>For a candidate envelope in a response message, that is a part of a Request-Response operation where the request contains a soap:Envelope with a document element with name: "Envelope" and a namespace different than "http://schemas.xmlsoap.org/soap/envelope/".</context>
			<assertionDescription>A soap:Fault is generated as response.</assertionDescription>
			<failureMessage>A soap:Fault is not generated for a document element named "Envelope" that had namespace 
different from: "http://schemas.xmlsoap.org/soap/envelope/"</failureMessage>
			<detailDescription/>
			<additionalEntryTypeList>
				<messageInput>requestEnvelope</messageInput>
				<wsdlInput>operation</wsdlInput>
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1015</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1007" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate envelope</context>
			<assertionDescription>DTDs relating to soap:header or soap:body documents, are not present in the envelope: no DOCTYPE element is present.</assertionDescription>
			<failureMessage>The soap:header or soap:body elements in the envelope, were described with an included DTD.</failureMessage>
			<failureDetailDescription>SOAP envelope.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1008</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1208" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate envelope</context>
			<assertionDescription>The SOAP envelope does not include XML processing instructions.</assertionDescription>
			<failureMessage>a SOAP envelope contains XML processing instructions.</failureMessage>
			<failureDetailDescription>SOAP envelope.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1009</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1009" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate non-fault envelope containing a soap:body with at least a child element, and that is not a response message to a one-way WSDL operation</context>
			<assertionDescription>The Envelope includes all soapbind:headers specified in the wsdl:input (if request) or wsdl:output (if response) of the operation referred to by its wsdl:binding, and may also include headers that were not specified.</assertionDescription>
			<failureMessage>Envelope does not include all soapbind:headers specified in the wsdl:input (if request) or wsdl:output (if response) of its bound operation. </failureMessage>
			<detailDescription/>
			<additionalEntryTypeList>
				<wsdlInput>binding</wsdlInput>		
			</additionalEntryTypeList>
			<prereqList>
				<testAssertionID>BP1601</testAssertionID>
				<testAssertionID>BP1202</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R2738</reference>
				<reference profileID="BP11">R2739</reference>
				<reference profileID="BP11" role="collateral">R2747</reference>
				<reference profileID="BP11" role="collateral">R2748</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP1309" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate envelope containing a soap:Body element</context>
			<assertionDescription>The soap:Envelope does not have direct children after the soap:Body element </assertionDescription>
			<failureMessage>The soap:Envelope has a direct child after the soap:Body element.</failureMessage>
			<detailDescription/>
			<additionalEntryTypeList/>
			<prereqList>
				<testAssertionID>BP1701</testAssertionID>
			</prereqList>
			<referenceList>
				<reference profileID="BP11">R1011</reference>
			</referenceList>
			<comments/>
		</testAssertion>
<testAssertion id="BP4100" entryType="anyEnvelope" type="informational" enabled="true">
		    <context>For a candidate envelope containing a header block that is either mandatory or is not described in the wsdl:binding.</context>
		    <assertionDescription>An envelope contains a header block that is either mandatory or is not described in the wsdl:binding.</assertionDescription>
		    <failureMessage>A header block in the envelope is either mandatory or is not described in the appropriate wsdl:binding.</failureMessage>
		    <detailDescription>Header blocks are the fundamental extensibility mechanism in SOAP.</detailDescription>
		    <additionalEntryTypeList>
		        <wsdlInput>binding</wsdlInput>
		    </additionalEntryTypeList>
		    <prereqList/>
		    <referenceList> 
		            <reference profileID="BP11">E0001</reference>
		    </referenceList>
		    <comments>This assertion is for the header blocks extensibility element.</comments>
		    <additionalInfo status="done" ownerSignOff="David Lauzon" editorSignOff="" testCasesCompleted="no"/>
		</testAssertion>
<testAssertion id="BP4101" entryType="anyEnvelope" type="informational" enabled="true">
		    <context>For a candidate envelope containing a soap:actor attribute with a value other than the special uri "http://schemas.xmlsoap.org/soap/actor/next".</context>
		    <assertionDescription>A header element in the envelope contains a soap:actor attribute with a value other than the special uri "http://schemas.xmlsoap.org/soap/actor/next".</assertionDescription>
		    <failureMessage>A header element in the envelope contains a soap:actor attribute with a value other than the special uri "http://schemas.xmlsoap.org/soap/actor/next".</failureMessage>
		    <detailDescription>Values of the soap:actor attribute, other than the special uri "http://schemas.xmlsoap.org/soap/actor/next", represent a private agreement between parties of the web service.</detailDescription>
		    <additionalEntryTypeList/>
		    <prereqList/>
		    <referenceList>
		            <reference profileID="BP11">E0004</reference>
		        </referenceList>
		    <comments>The soap:actor attribute is an extensibility point.</comments>
		    <additionalInfo status="done" ownerSignOff="David Lauzon" editorSignOff="David Lauzon" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="BP4102" entryType="anyEnvelope" type="informational" enabled="true">
		    <context>For a candidate envelope containing a fault with a non-empty detail element.</context>
		    <assertionDescription>A Fault element in an envelope contains a non-empty detail element.</assertionDescription>
		    <failureMessage>A Fault element in an envelope contains a non-empty detail element.</failureMessage>
		    <detailDescription>The contents of a Fault's detail element are not prescribed by SOAP 1.1.</detailDescription>
		    <additionalEntryTypeList/>
		    <prereqList/>
		    <referenceList>
		        <reference profileID="BP11">E0005</reference>
		    </referenceList>
		    <comments/>
		    <additionalInfo status="done" ownerSignOff="David Lauzon" editorSignOff="David Lauzon" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="BP4109" entryType="anyEnvelope" type="informational" enabled="true">
			<context>For a candidate envelope containing a soap:Body element with local or namespaced attributes.</context>
			<assertionDescription>An envelope contains a soap:Body element with local or namespaced attributes.</assertionDescription>
			<detailDescription>A namespaced or local attribute on a soap:Body element is considered an extensibility point because it is not constrained by SOAP 1.1.</detailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList> 
				<reference profileID="BP11">E0025</reference>
			</referenceList>
			<comments>Note that a namespace declaration on a soap:Body element is not considered an extensibility point.</comments>
			<additionalInfo status="done" ownerSignOff="David Lauzon" editorSignOff="" testCasesCompleted="no"/>
		</testAssertion>
<testAssertion id="BP3998" entryType="anyEnvelope" type="driverTestable" enabled="false">
          <context>Driver testable.</context>
          <assertionDescription>Driver testable.</assertionDescription>
          <detailDescription>Driver testable.</detailDescription>
          <additionalEntryTypeList/>
          <prereqList/>
          <referenceList>
    			<reference profileID="BP11">R1002</reference>
				<reference profileID="BP11">R1016</reference>
          </referenceList>
          <comments>All of these profile requirements are testable only by using a driver test program, since a test assertion would
require application-level knowledge of the message exchange.</comments>
        </testAssertion>
<testAssertion id="BP3999" entryType="anyEnvelope" type="notTestable" enabled="false">
			<context>Not testable.</context>
			<assertionDescription>Not testable.</assertionDescription>
			<detailDescription>Not testable.</detailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="BP11">R1017</reference>
				<reference profileID="BP11">R1025</reference>
				<reference profileID="BP11">R1027</reference>
				<reference profileID="BP11">R1028</reference>
				<reference profileID="BP11">R1029</reference>
				<reference profileID="BP11">R1030</reference>
				<reference profileID="BP11">R1107</reference>
				<reference profileID="BP11">R2753</reference>
				<reference profileID="BP11">E0002</reference>
				<reference profileID="BP11">E0003</reference>
				<reference profileID="BP11">E0006</reference>
				<reference profileID="BP11">E0024</reference>
			</referenceList>
			<comments>All of these profile requirements are NOT testable.  
			   Some of these test assertions represent capabilities which
               can not be validated.
            
               Note: That E0024 as stated, is really not worth testing because
               it is always true since there is always at least one namespace declaration
               (i.e., the SOAP namespace) defined on the Envelope element.
            </comments>
		</testAssertion>
<testAssertion id="SSBP1601" entryType="anyEnvelope" type="required" enabled="true">
			<context>For a candidate message in the message log file, which is not an empty response message</context>
			<assertionDescription>The soap:envelope in the message is a well-formed XML 1.0 document. </assertionDescription>
			<failureMessage>The soap:Envelope does not conform to XML 1.0.</failureMessage>
			<failureDetailDescription>{SOAP message}{any  XML parser error messages}</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="SSBP1">R9701</reference>
			</referenceList>
			<comments/>
			<additionalInfo status="proposedUpdate" ownerSignOff="Ed Johns" editorSignOff="Ed Johns" testCasesCompleted="yes"/>
		</testAssertion>
<testAssertion id="SSBP9704" entryType="anyEnvelope" type="recommended" enabled="true">
			<context>For a candidate envelope</context>
			<assertionDescription>The ENVELOPE does not contain the namespace declaration xmlns:xml="http://www.w3.org/XML/1998/namespace".</assertionDescription>
			<failureMessage>An ENVELOPE contains the namespace declaration xmlns:xml="http://www.w3.org/XML/1998/namespace".</failureMessage>
			<failureDetailDescription>SOAP envelope.</failureDetailDescription>
			<additionalEntryTypeList/>
			<prereqList/>
			<referenceList>
				<reference profileID="SSBP1">R9704</reference>
			</referenceList>
			<comments/>
		</testAssertion>
</artifact>
</profileAssertions>
