<webscript> 
  <shortname>Get Product (Document)</shortname> 
  <description> all in one blob:
		{
			"id": productId,
			"user": current user's username,
  			"views": [ {
  					//not ported yet "editable": true/false,
  					//not ported yet "author": username,
  					//not ported yet "modified": ISO8601 formatted date string,
  					"id": elementId,
  					"displayedElements": [elementId, ...],
  					"allowedElements": [elementId, ..],
  					"childrenViews": [viewId, ..], //this can be ignored, use the view2view instead
  				 	"contains": [
  				 		{
  				 			"type": "Paragraph", 
  				 			"sourceType": "reference"|"text",
  				 			
  				 			//*** if sourceType is reference ***/
  				 			"source": elementId, 
  				 			"sourceProperty": "documentation"|"name"|"value", 
  				 			
  				 			//*** if sourceType is text **/
  				 			"text": text
  				 		},
  				 		{
  				 			"type": "Table", 
  				 			"title": title, 
  				 			"body": [[{
  				 				"content": [ //this allows multiple things in a cell
  				 					{
  				 						"type": "Paragraph"|"List", 
  				 						(see above...)
  				 					}, ...
  				 				],
  				 				//** optional **/
  				 				"colspan": colspan, 
  				 				"rowspan": rowspan
  				 			}, ...], ...], 
  				 			"header": same as body, 
  				 			//** optional, probably translate to table class if user wants to customize css? **/
  				 			"style": style
  				 		},
  				 		{
  				 			"type": "List",
  				 			"list": [
  				 				[{ //each list item can have multiple things, Table in a list may not be supported
  				 					"type": "Paragraph"/"List"/"Table",
  				 					(see above...)
  				 				}, ...], ...
  				 			],
  				 			"ordered": true/false
  				 		}, ...  
  				 	],
  				 	//not ported yet "comments": [
  				 		{
  				 			"author": username,
  				 			"body": body,
  				 			"modified": ISO8601 formatted date string,
  				 			"id": id
  				 		}, ...
  				 	]
  				}
			],
  			"view2view": [
			  {
				"id": viewid or productid, 
				"childrenViews": [viewid, ..]
			  },...
			 ],
			"noSections": [viewid, ...],
  			"elements": [
  				{
  					"id": elementId,
  					"type": "Package" | "Property" | "Element" | 
  							"Dependency" | "Generalization" | "DirectedRelationship" | 
  							"Conform" | "Expose" | "Viewpoint",
  					"name": name,
  					"documentation": documentation,
  					"owner": elementId/null,
  					"isView": true|false,
  					"isProduct": true|false,  (isDocument?)
  					
  					//************** if type is "Property" ******/
  					"propertyType": elementId/null;
  					"isDerived": true|false, 
  					"isSlot": true|false, 
  					"value": [?], (based on valueType)
  					"valueType": "LiteralBoolean" | "LiteralInteger" | "LiteralString" | 
  							"LiteralReal" | "ElementValue" | "Expression",
  					
  					//*************** if type is subtype of DirectedRelationship (Generalization/Expose/Conform/Dependency) ***/
  					"source": elementId,
  					"target": elementId
  				},
  				...
  			],
  			//not ported yet "snapshot": true/false;
  			//not ported yet "snapshots": [
  				{
  					"id": id,
  					"created": ISO8601 formatted date string,
  					"url": url to snapshot (static html for now),
  					"creator": creator name
  				}
  			]
  		}  	
  </description>
  <url>/ui/newviews/{viewid}</url> 
  <format default="html">any</format> 
  <authentication>user</authentication> 
  <transaction allow="readonly">required</transaction>
  <family>View Editor</family>
  
</webscript>