<webscript> 
  <shortname>Post Element</shortname> 
  <description>
  Post elements to the project
  </description>
  <url>/javawebscripts/sites/{siteName}/projects/{projectId}/model</url>
  <format default="json">any</format> 
  <authentication>user</authentication> 
  <transaction allow="readwrite">required</transaction>
  <family>EMS Java Webscripts</family>
  <args>
  	<arg>
  		<name>posted content</name>
  		<description>The request body of the post as json:
  		{
  			"elements": [
  			//added properties of elements so the element json object should have all information about that element
  			//in terms of data interchange, this seems to be a better way for clients to process information then 
  			//having "relationships" in a separate object, since the relationships in alfresco are implementation details
  			//for properties that are really first class to the element
  				{
  					"id": elementId,
  					"type": "Package" | "Property" | "Element" | 
  							"Dependency" | "Generalization" | "DirectedRelationship" | 
  							"Conform" | "Expose" | "Viewpoint",
  					"name": name,
  					"documentation": documentation,
  					"owner": elementId/null,
  					"isView": true|false,
  					"isProduct": true|false,  (isDocument?)
  					
  					//************** if type is "Property" ******/
  					"propertyType": elementId/null;
  					"isDerived": true|false, 
  					"isSlot": true|false, 
  					"value": [?], (based on valueType)
  					"valueType": "LiteralBoolean" | "LiteralInteger" | "LiteralString" | 
  							"LiteralReal" | "ElementValue" | "Expression",
  					
  					//*************** if type is subtype of DirectedRelationship (Generalization/Expose/Conform/Dependency) ***/
  					"source": elementId,
  					"target": elementId
  				},
  				...
  			}
  			]
  		}
  		</description>
  	</arg>
  </args>
</webscript>