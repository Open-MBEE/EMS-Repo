{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "description": "Element specification",
    "properties": {
        "source": {
            "type": "string",
            "description": "The source of the change (e.g., from which client). This is optional."
        },
        "elements": {
            "type": "array",
            "items": {
                "type": "object",
                "$ref": "#/definitions/Element"
            }
        },
        "message": {
                    "type": "string",
                    "description": "The response message for this transaction if it is non-empty."
        }
    },

    "definitions": {
        "Element": {
            "properties": {
                "sysmlid": {
                    "type": "string",
                    "description": "Unique identifier of the element. Equivalent to MDID unless element is a slot. If a slot, id is constructed using the pattern [instanceSpecId]-slot-[definingFeatureId]."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the element"
                },
                "documentation": {
                    "type": "string",
                    "description": "Documentation of the element"
                },
                "editable": {
                    "type": "boolean",
                    "description": "Indicates whether user has permissions to edit the element (so GUI can toggle, server still checks on save though)"
                },
                "owner": {
                    "type": "string",
                    "description": "Owner of the element - this indicates containment"
                },
                "creator": {
                    "type": "string",
                    "description": "Last modifier of the element"
                },
                "modified": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modified time of the element"
                },
                "read": {
                    "type": "string",
                    "format": "date-time",
                    "description": "On updating any element, the time when the data was loaded needs to be provided so conflicts can be detected and handled by the server"
                },
                "qualifiedName": {
                    "type": "string",
                    "description": "Containment hierarchy of element based off of SysML names, currently provided as a convenience for context"
                },
                "qualifiedPath": {
                    "type": "string",
                    "description": "Containment hierarchy of element based off of SysML ids, provided for systems that can't find by unique id"
                },
                "id": {
                    "type": "string",
                    "description": "Alfresco unique identifier for the element"
                },
                "siteCharacterizationId": {
                    "type": "string",
                    "description": "Sysml ID of the site characterization that element belongs to"
                },
                "specialization": {
                    "type": "object",
                    "description": "Properties of the specialized type of the element, if any, adds additional metadata per the references",
                    "oneOf": [
                        { "$ref": "#/definitions/Comment"},
                        { "$ref": "#/definitions/Constraint"},
                        { "$ref": "#/definitions/InstanceSpecification"},
                        { "$ref": "#/definitions/Operation"},
                        { "$ref": "#/definitions/Package"},
                        { "$ref": "#/definitions/Product"},
                        { "$ref": "#/definitions/Project"},
                        { "$ref": "#/definitions/Property"},
                        { "$ref": "#/definitions/Parameter"},
                        { "$ref": "#/definitions/View"},
                        { "$ref": "#/definitions/ViewPoint"},

                        { "$ref": "#/definitions/DirectedRelationship"},
                        { "$ref": "#/definitions/Conform"},
                        { "$ref": "#/definitions/Dependency"},
                        { "$ref": "#/definitions/Expose"},
                        { "$ref": "#/definitions/Connector"},
                        { "$ref": "#/definitions/Association"},
                        { "$ref": "#/definitions/Characterizes"},
                        { "$ref": "#/definitions/Succession"},
                        { "$ref": "#/definitions/Binding"},
                        { "$ref": "#/definitions/MagicDrawData"}
                        
                    ]
                }
            }
        },


        "Comment": {
            "properties": {
                "type": { "enum": ["Comment"] }
            }
        },
        "Constraint": {
            "properties": {
                "type": { "enum": ["Constraint"] },
                "specification": {
                    "type": "string",
                    "description": "ID of element that provides the constraint specification"
                }
            }
        },
        "InstanceSpecification": {
            "properties": {
                "type": { "enum": ["InstanceSpecification"] },
                "instanceSpecificationSpecification": {
                    "type": "string",
                    "description": "ID of element that provides the instance specification"
                }
            }
        },
        "Operation": {
            "properties": {
                "type": { "enum": ["Operation"] },
                "parameters": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "ID of parameter elements"
                    },
                    "uniqueItems": true    
                },
                "expression": {
                    "type": "string",
                    "description": "ID of expression element"
                }
            }
        },
        "Package": {
            "properties": {
                "type": { "enum": ["Package"] },
                "isSite": {
                    "type": "boolean",
                    "description": "True if site characterization exists"
                }
            }
        },
        "Product": {
            "properties": {
                "type": { "enum": ["Product"] },
                "view2view": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "A map of views to views"
                    }
                },
                "noSections": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "ID of the view elements that have no section"
                    }
                }
            }
        },
        "Project": {
            "properties": {
                "type": { "enum": ["Project"] },
                "projectVersion": {
                    "type": "string"
                }
            }
        },
        "Property": {
            "properties": {
                "type": { "enum": ["Property"] },
                "lower": {
                    "type": "object",
                    "description": "",
                    "oneOf": [
                        { "$ref": "#/definitions/ValueSpecification"},
                        { "$ref": "#/definitions/Duration"},
                        { "$ref": "#/definitions/DurationInterval"},
                        { "$ref": "#/definitions/ElementValue"},
                        { "$ref": "#/definitions/Expression"},
                        { "$ref": "#/definitions/OpaqueExpression"},
                        { "$ref": "#/definitions/InstanceValue"},
                        { "$ref": "#/definitions/Interval"},
                        { "$ref": "#/definitions/StringExpression"},
                        { "$ref": "#/definitions/LiteralBoolean"},
                        { "$ref": "#/definitions/LiteralNull"},
                        { "$ref": "#/definitions/LiteralInteger"},
                        { "$ref": "#/definitions/LiteralReal"},
                        { "$ref": "#/definitions/LiteralString"},
                        { "$ref": "#/definitions/LiteralUnlimitedNatural"},
                        { "$ref": "#/definitions/TimeExpression"},
                        { "$ref": "#/definitions/TimeInterval"}
                    ]
                },
                "upper": {
                    "type": "object",
                    "description": "",
                    "oneOf": [
                        { "$ref": "#/definitions/ValueSpecification"},
                        { "$ref": "#/definitions/Duration"},
                        { "$ref": "#/definitions/DurationInterval"},
                        { "$ref": "#/definitions/ElementValue"},
                        { "$ref": "#/definitions/Expression"},
                        { "$ref": "#/definitions/OpaqueExpression"},
                        { "$ref": "#/definitions/InstanceValue"},
                        { "$ref": "#/definitions/Interval"},
                        { "$ref": "#/definitions/StringExpression"},
                        { "$ref": "#/definitions/LiteralBoolean"},
                        { "$ref": "#/definitions/LiteralNull"},
                        { "$ref": "#/definitions/LiteralInteger"},
                        { "$ref": "#/definitions/LiteralReal"},
                        { "$ref": "#/definitions/LiteralString"},
                        { "$ref": "#/definitions/LiteralUnlimitedNatural"},
                        { "$ref": "#/definitions/TimeExpression"},
                        { "$ref": "#/definitions/TimeInterval"}
                    ]
                },
                "isDerived": {
                    "type": "boolean",
                    "description": "Indicates whether the property is a free variable (if true) or not (if false)"
                },
                "isSlot": {
                    "type": "boolean",
                    "description": "Indicates whther or not the property refers to a slot value"
                },
                "propertyType": {
                    "type": "string",
                    "description": "ID for the property type element"
                },
                
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "The value of the property",
                        "oneOf": [
                            { "$ref": "#/definitions/ValueSpecification"},
                            { "$ref": "#/definitions/Duration"},
                            { "$ref": "#/definitions/DurationInterval"},
                            { "$ref": "#/definitions/ElementValue"},
                            { "$ref": "#/definitions/Expression"},
                            { "$ref": "#/definitions/OpaqueExpression"},
                            { "$ref": "#/definitions/InstanceValue"},
                            { "$ref": "#/definitions/Interval"},
                            { "$ref": "#/definitions/StringExpression"},
                            { "$ref": "#/definitions/LiteralBoolean"},
                            { "$ref": "#/definitions/LiteralNull"},
                            { "$ref": "#/definitions/LiteralInteger"},
                            { "$ref": "#/definitions/LiteralReal"},
                            { "$ref": "#/definitions/LiteralString"},
                            { "$ref": "#/definitions/LiteralUnlimitedNatural"},
                            { "$ref": "#/definitions/TimeExpression"},
                            { "$ref": "#/definitions/TimeInterval"}
                        ]
                    }
                }
            }
        },
        "Parameter": {
            "properties": {
                "type": { "enum": ["Parameter"] },
                "direction": {
                    "type": "string"
                },
                "parameterType": {
                    "type": "string"
                },
                "defaultValue": {
                    "type": "string",
                    "description": "Node ID"
                }
            }
        },
        "View": {
            	"properties": {
            	    "type": { "enum": ["View"] },
                "contains": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "oneOf": [
                            {"$ref": "#/definitions/Paragraph"},
                            {"$ref": "#/definitions/Table"},
                            {"$ref": "#/definitions/List"},
                            {"$ref": "#/definitions/Image"},
                            {"$ref": "#/definitions/Section"}
                        ]
                    }
                },
                "displayedElements": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "ID of displayed element"
                    }
                },
                "allowedElements": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "ID of allowed element"
                    }
                },
                "childrenViews": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "ID of views"
                    }
                },
                "contents": {
                    "type": "string",
                    "description": "Node ID"
                }
            }
        },
        "Viewpoint": {
            "properties": {
                "type": { "enum": ["Viewpoint"] },
                "method": {
                    "type": "string",
                    "description": "ID of the method element for the viewpoint"
                }
            }
        },

        "DirectedRelationship": {
            "properties": {
                "type": { "enum": ["DirectedRelationship"] },
                "source": {
                    "type": "string",
                    "description": "ID of the source of the relationship"
                },
                "target": {
                    "type": "string",
                    "description": "ID of the target of the relationship"
                }
            }
        },
        "Conform": {
            "properties": {
                "type": { "enum": ["Conform"] }
            },
            "allOf": [
                {"$ref": "#/definitions/DirectedRelationship"}
            ]
        },
        "Dependency": {
            "properties": {
                "type": { "enum": ["Dependency"] }
            },
            "allOf": [
                {"$ref": "#/definitions/DirectedRelationship"}
            ]
        },
        "Expose": {
            "properties": {
                "type": { "enum": ["Expose"] }
            },
            "allOf": [
                {"$ref": "#/definitions/DirectedRelationship"}
            ]
        },


        "ValueSpecification": {
            "properties": {
                "type": { "enum": ["ValueSpecification"] },
                "expression": {
                    "type": "string",
                    "description": "ID of the SysML element expression of the value specification"
                }
            }
        },
        "Duration": {
            "properties": {
                "type": { "enum": ["Duration"] }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "DurationInterval": {
            "properties": {
                "type": { "enum": ["DurationInterval"] },
                "durationMax": {
                    "type": "string",
                    "description": "ID of the SysML element representing the duration max"
                },
                "durationMin": {
                    "type": "string",
                    "description": "ID of the SysML element representing the duration min"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "ElementValue": {
            "properties": {
                "type": { "enum": ["ElementValue"] },
                "element": {
                    "type": "string",
                    "description": "ID of the element that stores this element value"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "LiteralSet": {
            "properties": {
                "type": { "enum": ["LiteralSet"] },
                "set": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "The value specs",
                        "oneOf": [
                            { "$ref": "#/definitions/ValueSpecification"},
                            { "$ref": "#/definitions/Duration"},
                            { "$ref": "#/definitions/DurationInterval"},
                            { "$ref": "#/definitions/ElementValue"},
                            { "$ref": "#/definitions/Expression"},
                            { "$ref": "#/definitions/OpaqueExpression"},
                            { "$ref": "#/definitions/InstanceValue"},
                            { "$ref": "#/definitions/Interval"},
                            { "$ref": "#/definitions/StringExpression"},
                            { "$ref": "#/definitions/LiteralBoolean"},
                            { "$ref": "#/definitions/LiteralNull"},
                            { "$ref": "#/definitions/LiteralInteger"},
                            { "$ref": "#/definitions/LiteralReal"},
                            { "$ref": "#/definitions/LiteralString"},
                            { "$ref": "#/definitions/LiteralUnlimitedNatural"},
                            { "$ref": "#/definitions/TimeExpression"},
                            { "$ref": "#/definitions/TimeInterval"}
                        ]
                    }
                },
                "setOperand": {
                    "type": "object",
                    "description": "The value specs",
                    "oneOf": [
                        { "$ref": "#/definitions/ValueSpecification"},
                        { "$ref": "#/definitions/Duration"},
                        { "$ref": "#/definitions/DurationInterval"},
                        { "$ref": "#/definitions/ElementValue"},
                        { "$ref": "#/definitions/Expression"},
                        { "$ref": "#/definitions/OpaqueExpression"},
                        { "$ref": "#/definitions/InstanceValue"},
                        { "$ref": "#/definitions/Interval"},
                        { "$ref": "#/definitions/StringExpression"},
                        { "$ref": "#/definitions/LiteralBoolean"},
                        { "$ref": "#/definitions/LiteralNull"},
                        { "$ref": "#/definitions/LiteralInteger"},
                        { "$ref": "#/definitions/LiteralReal"},
                        { "$ref": "#/definitions/LiteralString"},
                        { "$ref": "#/definitions/LiteralUnlimitedNatural"},
                        { "$ref": "#/definitions/TimeExpression"},
                        { "$ref": "#/definitions/TimeInterval"}
                    ]
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "Expression": {
            "properties": {
                "type": { "enum": ["Expression"] },
                "operand": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "The value specs",
                        "oneOf": [
                            { "$ref": "#/definitions/ValueSpecification"},
                            { "$ref": "#/definitions/Duration"},
                            { "$ref": "#/definitions/DurationInterval"},
                            { "$ref": "#/definitions/ElementValue"},
                            { "$ref": "#/definitions/Expression"},
                            { "$ref": "#/definitions/OpaqueExpression"},
                            { "$ref": "#/definitions/InstanceValue"},
                            { "$ref": "#/definitions/Interval"},
                            { "$ref": "#/definitions/StringExpression"},
                            { "$ref": "#/definitions/LiteralBoolean"},
                            { "$ref": "#/definitions/LiteralNull"},
                            { "$ref": "#/definitions/LiteralInteger"},
                            { "$ref": "#/definitions/LiteralReal"},
                            { "$ref": "#/definitions/LiteralString"},
                            { "$ref": "#/definitions/LiteralUnlimitedNatural"},
                            { "$ref": "#/definitions/TimeExpression"},
                            { "$ref": "#/definitions/TimeInterval"}
                        ]
                    }
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "OpaqueExpression": {
            "properties": {
                "type": { "enum": ["OpaqueExpression"] },
                "expressionBody": {
                    "type": "string",
                    "description": "The opaque expression string"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "InstanceValue": {
            "properties": {
                "type": { "enum": ["InstanceValue"] },
                "instance": {
                    "type": "string",
                    "description": "ID of the SysML element representing the instance"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "Interval": {
            "properties": {
                "type": { "enum": ["Interval"] }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "StringExpression": {
            "properties": {
                "type": { "enum ": ["StringExpression"] }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "LiteralBoolean": {
            "properties": {
                "type": { "enum": ["LiteralBoolean"] },
                "boolean": {
                    "type": "boolean"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "LiteralNull": {
            "properties": {
                "type": { "enum": ["LiteralNull"] }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "LiteralInteger": {
            "properties": {
                "type": { "enum": ["LiteralInteger"] },
                "integer": {
                    "type": "integer"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "LiteralReal": {
            "properties": {
                "type": { "enum": ["LiteralReal"] },
                "double": {
                    "type": "number"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "LiteralString": {
            "properties": {
                "type": { "enum": ["LiteralString"] },
                "string": {
                    "type": "string"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "LiteralUnlimitedNatural": {
            "properties": {
                "type": { "enum": ["LiteralUnlimitedNatural"] },
                "naturalValue": {
                    "type": "integer"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "TimeExpression": {
            "properties": {
                "type": { "enum": ["TimeExpression"] }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "TimeInterval": {
            "properties": {
                "type": { "enum": ["TimeInterval"] },
                "timeIntervalMin": {
                    "type": "string",
                    "description": "ID of the SysML element representing the time interval max"
                },
                "timeIntervalMin": {
                    "type": "string",
                    "description": "ID of the SysML element representing the time interval min"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/ValueSpecification"}
            ]
        },
        "Connector": {
            "properties": {
                "type": { "enum": ["Connector"] },
                "targetLower": {
                    "type": "object",
                    "description": "",
                    "oneOf": [
                        { "$ref": "#/definitions/ValueSpecification"},
                        { "$ref": "#/definitions/Duration"},
                        { "$ref": "#/definitions/DurationInterval"},
                        { "$ref": "#/definitions/ElementValue"},
                        { "$ref": "#/definitions/Expression"},
                        { "$ref": "#/definitions/OpaqueExpression"},
                        { "$ref": "#/definitions/InstanceValue"},
                        { "$ref": "#/definitions/Interval"},
                        { "$ref": "#/definitions/StringExpression"},
                        { "$ref": "#/definitions/LiteralBoolean"},
                        { "$ref": "#/definitions/LiteralNull"},
                        { "$ref": "#/definitions/LiteralInteger"},
                        { "$ref": "#/definitions/LiteralReal"},
                        { "$ref": "#/definitions/LiteralString"},
                        { "$ref": "#/definitions/LiteralUnlimitedNatural"},
                        { "$ref": "#/definitions/TimeExpression"},
                        { "$ref": "#/definitions/TimeInterval"}
                    ]
                },
                "targetUpper": {
                    "type": "object",
                    "description": "",
                    "oneOf": [
                        { "$ref": "#/definitions/ValueSpecification"},
                        { "$ref": "#/definitions/Duration"},
                        { "$ref": "#/definitions/DurationInterval"},
                        { "$ref": "#/definitions/ElementValue"},
                        { "$ref": "#/definitions/Expression"},
                        { "$ref": "#/definitions/OpaqueExpression"},
                        { "$ref": "#/definitions/InstanceValue"},
                        { "$ref": "#/definitions/Interval"},
                        { "$ref": "#/definitions/StringExpression"},
                        { "$ref": "#/definitions/LiteralBoolean"},
                        { "$ref": "#/definitions/LiteralNull"},
                        { "$ref": "#/definitions/LiteralInteger"},
                        { "$ref": "#/definitions/LiteralReal"},
                        { "$ref": "#/definitions/LiteralString"},
                        { "$ref": "#/definitions/LiteralUnlimitedNatural"},
                        { "$ref": "#/definitions/TimeExpression"},
                        { "$ref": "#/definitions/TimeInterval"}
                    ]
                },
                "sourceLower": {
                    "type": "object",
                    "description": "",
                    "oneOf": [
                        { "$ref": "#/definitions/ValueSpecification"},
                        { "$ref": "#/definitions/Duration"},
                        { "$ref": "#/definitions/DurationInterval"},
                        { "$ref": "#/definitions/ElementValue"},
                        { "$ref": "#/definitions/Expression"},
                        { "$ref": "#/definitions/OpaqueExpression"},
                        { "$ref": "#/definitions/InstanceValue"},
                        { "$ref": "#/definitions/Interval"},
                        { "$ref": "#/definitions/StringExpression"},
                        { "$ref": "#/definitions/LiteralBoolean"},
                        { "$ref": "#/definitions/LiteralNull"},
                        { "$ref": "#/definitions/LiteralInteger"},
                        { "$ref": "#/definitions/LiteralReal"},
                        { "$ref": "#/definitions/LiteralString"},
                        { "$ref": "#/definitions/LiteralUnlimitedNatural"},
                        { "$ref": "#/definitions/TimeExpression"},
                        { "$ref": "#/definitions/TimeInterval"}
                    ]
                },
                "sourceUpper": {
                    "type": "object",
                    "description": "",
                    "oneOf": [
                        { "$ref": "#/definitions/ValueSpecification"},
                        { "$ref": "#/definitions/Duration"},
                        { "$ref": "#/definitions/DurationInterval"},
                        { "$ref": "#/definitions/ElementValue"},
                        { "$ref": "#/definitions/Expression"},
                        { "$ref": "#/definitions/OpaqueExpression"},
                        { "$ref": "#/definitions/InstanceValue"},
                        { "$ref": "#/definitions/Interval"},
                        { "$ref": "#/definitions/StringExpression"},
                        { "$ref": "#/definitions/LiteralBoolean"},
                        { "$ref": "#/definitions/LiteralNull"},
                        { "$ref": "#/definitions/LiteralInteger"},
                        { "$ref": "#/definitions/LiteralReal"},
                        { "$ref": "#/definitions/LiteralString"},
                        { "$ref": "#/definitions/LiteralUnlimitedNatural"},
                        { "$ref": "#/definitions/TimeExpression"},
                        { "$ref": "#/definitions/TimeInterval"}
                    ]
                },
                "sourcePath": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "IDs of the Nodes"
                    }
                },
                "targetPath": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "IDs of the Nodes"
                    }
                },
                "connectorKind": {
                    "type": "string",
                    "description": "Can be BINDING, DIRECTED, NONE"
                },
                "connectorValue": {
                    "type": "object",
                    "description": "The value specs",
                    "oneOf": [
                        { "$ref": "#/definitions/ValueSpecification"},
                        { "$ref": "#/definitions/Duration"},
                        { "$ref": "#/definitions/DurationInterval"},
                        { "$ref": "#/definitions/ElementValue"},
                        { "$ref": "#/definitions/Expression"},
                        { "$ref": "#/definitions/OpaqueExpression"},
                        { "$ref": "#/definitions/InstanceValue"},
                        { "$ref": "#/definitions/Interval"},
                        { "$ref": "#/definitions/StringExpression"},
                        { "$ref": "#/definitions/LiteralBoolean"},
                        { "$ref": "#/definitions/LiteralNull"},
                        { "$ref": "#/definitions/LiteralInteger"},
                        { "$ref": "#/definitions/LiteralReal"},
                        { "$ref": "#/definitions/LiteralString"},
                        { "$ref": "#/definitions/LiteralUnlimitedNatural"},
                        { "$ref": "#/definitions/TimeExpression"},
                        { "$ref": "#/definitions/TimeInterval"}
                    ]
                },
                "connectorType": {
                    "type": "string",
                    "description": "ID for the connector type element"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/DirectedRelationship"}
            ]
        },
        "Association": {
            "properties": {
                "type": { "enum": ["Association"] },
                "ownedEnd": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "IDs of the Nodes"
                    }
                },
                "sourceAggregation": {
                    "type": "string",
                    "description": "can be COMPOSITE, SHARED, NONE"
                },
                "targetAggregation": {
                    "type": "string",
                    "description": "can be COMPOSITE, SHARED, NONE"
                }
            },
            "allOf": [
                {"$ref": "#/definitions/DirectedRelationship"}
            ]
        },
        "Characterizes": {
            "properties": {
                "type": { "enum": ["Characterizes"] }
            },
            "allOf": [
                {"$ref": "#/definitions/DirectedRelationship"}
            ]
        },
        "MagicDrawData": {
            "properties": {
                "type": { "enum": ["MagicDrawData"] },
                "mdData": {
                    "type": "string"
                }
            }
        },
        "Succession": {
            "allOf": [
                {"$ref": "#/definitions/Connector"}
            ]
        },
        "Binding": {
            "allOf": [
                {"$ref": "#/definitions/Connector"}
            ]
        },
        
        "Paragraph": {
            "properties": {
                "type": { "enum": ["Paragraph"] },
                "sourceType": {
                    "enum": ["reference", "text"],
                    "description": "If reference, provides the source and sourceProperty, otherwise just the text"
                },
                "source": {
                    "type": "string",
                    "description": "Element ID" 
                },
                "sourceProperty": {
                    "enum": ["documentation", "name", "value"]
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "Table": {
            "properties": {
                "type": { "enum": ["Table"] },
                "title": { "type": "string" },
                "body": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "content": {
                                    "type": "array",
                                    "items": {
			                            "type": "object",
			                            "oneOf": [
			                                { "$ref": "#/definitions/Paragraph" },
			                                { "$ref": "#/definitions/List" },
			                                { "$ref": "#/definitions/Table" },
			                                { "$ref": "#/definitions/Image" }
			                            ]
		                            }
	                            }
                            }
                        }
                    }
                }
            }
        },
        "List": {
            "properties": {
                "type": { "enum": ["List"] },
                "ordered": {
                    "type": "boolean"
                 },
                 "list": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "oneOf": [
                                { "$ref": "#/definitions/Paragraph" },
                                { "$ref": "#/definitions/List" },
                                { "$ref": "#/definitions/Table" },
                                { "$ref": "#/definitions/Image" }
                            ]
                        }
                    }
                }
             }
        },
        "Image": {
            "properties": {
                "type": { "enum": ["Image"] },
                "sysmlid": {
                    "type": "string"
                }
            }
        },
        "Section": {
            "properties": {
                "type": { "enum": ["Section"] },
                "name": {
                    "type": "string"
                },
                "contains": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "oneOf": [
                            {"$ref": "#/definitions/Paragraph"},
                            {"$ref": "#/definitions/Table"},
                            {"$ref": "#/definitions/List"},
                            {"$ref": "#/definitions/Image"},
                            {"$ref": "#/definitions/Section"}
                        ]
                    }
                }
            }
        }
    }
}
